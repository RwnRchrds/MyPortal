@model MyPortal.Areas.Staff.ViewModels.CommentsViewModel

@{
    ViewBag.Title = "Comments";
    ViewBag.DisplayTitle = "Profiles Comments";
    Layout = "~/Views/Portal/_LayoutStaff.cshtml";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Comments</h1>
</div>

<div class="row">

    <div class="col-xl-12 col-md-12 mb-4">

        <button type="button" class="btn btn-primary mp-btn-top-auto" data-toggle="modal" onclick="openNewCommentModal()">New Comment</button>

    </div>

</div>

<div class="row">

    <div class="col-xl-12 col-md-12 mb-4">

        <div class="form-group">
            @Html.Label("Comment Bank")
            @Html.DropDownList("SelectedStatus", new SelectList(Model.CommentBanks, "Id", "Name"), "Select Comment Bank", new { @class = "form-control", Name = "Id", id = "selectedBank" })
        </div>

    </div>

</div>

<div class="row">

    <div class="col-xl-12 col-lg-12">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Comments</h6>
            </div>
            <!-- Card Body -->
            <div class="card-body">
                @Html.EJS().Grid("Comments").DataSource(d => { d.Url(Url.HttpRouteUrl("ApiProfilesGetCommentsByCommentBankDataGrid", new { commentBankId = 0 })).CrossDomain(false).Adaptor("UrlAdaptor"); }).Columns(c =>
                {
                    c.Field("CommentBankName").HeaderText("Comment Bank").Template("#commentBankNameTemplate").Width("300").Add();
                    c.Field("Value").HeaderText("Comment").Template("#commentValueTemplate").Width("300").Add();
                    c.HeaderText("Actions").Template("#commentActionsTemplate").Width("170").Add();
                }).AllowPaging().PageSettings(p => p.PageSize(12)).SearchSettings(s => { s.Operator("contains").IgnoreCase(true); }).Toolbar(new List<string> { "Search" }).Render()
            </div>
        </div>
    </div>

</div>

<div id="NewCommentModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">New Comment</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = Url.HttpRouteUrl("ApiProfilesCreateComment", new { }), HttpMethod = "POST", OnSuccess = "newCommentSuccess", OnFailure = "newCommentFailure" }, new { id = "newCommentForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Comment Bank")
                        @Html.DropDownListFor(l => l.Comment.CommentBankId, new SelectList(Model.CommentBanks, "Id", "Name"), "Select Comment Bank", new { @class = "form-control", Name = "CommentBankId", id = "newCommentBankControl" })
                        @Html.ValidationMessageFor(x => x.Comment.CommentBankId)
                    </div>
                    <div class="form-group">
                        @Html.Label("Value")
                        @Html.TextAreaFor(x => x.Comment.Value, new { @class = "form-control", Name = "Value" })
                        @Html.ValidationMessageFor(x => x.Comment.Value)
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="EditCommentModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit Comment</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = Url.HttpRouteUrl("ApiProfilesUpdateComment", new { }), HttpMethod = "POST", OnSuccess = "editCommentSuccess", OnFailure = "editCommentFailure" }, new { id = "editCommentForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Comment Bank")
                        @Html.DropDownListFor(l => l.Comment.CommentBankId, new SelectList(Model.CommentBanks, "Id", "Name"), "Select Comment Bank", new { @class = "form-control", Name = "CommentBankId", id = "editCommentBankControl" })
                        @Html.ValidationMessageFor(x => x.Comment.CommentBankId)
                    </div>
                    <div class="form-group">
                        @Html.Label("Value")
                        @Html.TextAreaFor(x => x.Comment.Value, new { @class = "form-control", Name = "Value", id = "editCommentValueControl" })
                        @Html.ValidationMessageFor(x => x.Comment.Value)
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(x => x.Comment.Id, new { id = "editCommentIdControl", Name = "Id" })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts
{
    <script>

        var urlGetCommentsByCommentBank =
            "@Url.HttpRouteUrl("ApiProfilesGetCommentsByCommentBankDataGrid", new {commentBankId = 9999})";
        var urlGetCommentById = "@Url.HttpRouteUrl("ApiProfilesGetCommentById", new {commentId = 9999})";
        var urlDeleteComment = "@Url.HttpRouteUrl("ApiProfilesDeleteComment", new {commentId = 9999})";

        $(document).ready(function() {
            $('.modal').on('hidden.bs.modal',
                function() {
                    $(this).find('form').trigger('reset');
                });

            $("#selectedBank").on("change",
                function() {
                    var url = urlGetCommentsByCommentBank.replace("9999", $("#selectedBank").val());
                    changeTableSource("Comments", url);
                });

            $("#Comments").on("click",
                ".js-edit",
                function() {
                    var button = $(this);
                    var commentId = button.attr("data-comment-id");
                    $.ajax({
                        url: urlGetCommentById.replace("9999", commentId),
                        method: "GET",
                        success: function(result) {
                            $("#editCommentBankControl").val(result["commentBankId"]);
                            $("#editCommentValueControl").val(result["value"]);
                            $("#editCommentIdControl").val(result["id"]);
                        },
                        error: function() {
                            toastr.error("Failed to load comment data");
                        }
                    });
                    $("#EditCommentModal").modal('toggle');
                });

            $("#Comments").on("click",
                ".js-delete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to delete this comment?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: urlDeleteComment.replace("9999", button.attr("data-comment-id")),
                                    method: "DELETE",
                                    success: function(a) {
                                        refreshTable("Comments");
                                        toastr.success(a);
                                    },
                                    error: function(e) {
                                        toastr.error(e.responseJSON);
                                    }
                                });
                            }
                        });
                });
        });

        function newCommentSuccess(result) {
            $("#NewCommentModal").modal('hide');
            refreshTable("Comments");
            toastr.success(result);
        }

        function newCommentFailure(result) {
            $("#NewCommentModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function editCommentSuccess(result) {
            $("#EditCommentModal").modal('hide');
            refreshTable("Comments");
            toastr.success(result);
        }

        function editCommentFailure(result) {
            $("#EditCommentModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function openNewCommentModal() {
            var commentBank = $("#selectedBank").val();

            if (commentBank !== "") {
                $("#newCommentBankControl").val(commentBank);
                $("#NewCommentModal").modal('toggle');
            }
        }
    </script>

    <script type="text/x-jsrender" id="commentBankNameTemplate">
        <div>
            ${CommentBankName}
        </div>
    </script>

    <script type="text/x-jsrender" id="commentValueTemplate">
        <div>
            ${Value}
        </div>
    </script>

    <script type="text/x-jsrender" id="commentActionsTemplate">
        <div>
            <button type='button' class='btn btn-xs btn-warning mp-btn-action js-edit' data-comment-id="${Id}">
                <i class="fas fa-edit"></i>
            </button>

            <button type='button' class='btn btn-xs btn-danger mp-btn-action js-delete' data-comment-id="${Id}">
                <i class="far fa-trash-alt"></i>
            </button>
        </div>
    </script>
}