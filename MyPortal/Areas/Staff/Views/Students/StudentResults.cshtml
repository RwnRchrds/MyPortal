@using MyPortal.Services
@using Syncfusion.EJ2.Grids
@model MyPortal.Areas.Students.ViewModels.StudentResultsViewModel
@{
    ViewBag.Title = "Student Results";
    ViewBag.DisplayTitle = "Student Results";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">@PeopleService.GetStudentDisplayName(Model.Student).ResponseObject</h1>
</div>

<div class="row">

    <div class="col-xl-12 col-md-12 mb-4">

        <button type="button" class="btn btn-primary mp-btn-top-auto" onclick="openNewResultModal()">
            <i class="fas fa-plus-circle"></i> New Result
        </button>

    </div>

</div>

<div class="row">

    <div class="col-xl-12 col-md-12 mb-4">

        <div class="form-group">
            @Html.Label("Result Set")
            @Html.DropDownList("SelectedResultSet", new SelectList(Model.ResultSets, "Id", "Name", Model.CurrentResultSetId), new { @class = "form-control", Name = "ResultSet", id = "selectedResultSet" })
        </div>

    </div>

</div>

<div class="row">

    <div class="col-xl-12 col-lg-12">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Results</h6>
            </div>
            <!-- Card Body -->
            <div class="card-body">
                @Html.EJS().Grid("Results").DataSource(dataManager =>
                {
                    dataManager.Url(Url.HttpRouteUrl("ApiAssessmentGetResultsByStudentDataGrid", new { studentId = Model.Student.Id, resultSetId = 0 })).CrossDomain(false).Adaptor("UrlAdaptor");
                }).Columns(col =>
                {
                    col.Field("Subject").HeaderText("Subject").Template("#resultsSubjectTemplate").Add();
                    col.Field("Value").HeaderText("Result").Template("#resultsValueTemplate").Add();
                }).AllowPaging().PageSettings(page => page.PageSize(12)).EnableHover(false).GridLines(GridLine.Both).Render()
            </div>
        </div>
    </div>

</div>

<div id="NewResultModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--CONTENT-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">New Result - @Model.Student.Person.LastName, @Model.Student.Person.FirstName</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = "/api/results/create", HttpMethod = "POST", OnSuccess = "newResultSuccess", OnFailure = "newResultFailure" }, new { id = "newResultForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Result Set")
                        @Html.DropDownListFor(x => x.Result.ResultSetId, new SelectList(Model.ResultSets, "Id", "Name", "Select Result Set"), new { @class = "form-control", Name = "ResultSetId", id = "newResultSetControl" })
                        @Html.ValidationMessageFor(x => x.Result.ResultSetId)
                    </div>
                    <div class="form-group">
                        @Html.Label("Subject")
                        @Html.DropDownListFor(x => x.Result.SubjectId, new SelectList(Model.Subjects, "Id", "Name"), "Select a Subject", new { @class = "form-control", Name = "SubjectId" })
                        @Html.ValidationMessageFor(x => x.Result.SubjectId)
                    </div>
                    <div class="form-group">
                        @Html.Label("Value")
                        @Html.TextBoxFor(x => x.Result.Value, new { @class = "form-control", Name = "Value" })
                        @Html.ValidationMessageFor(x => x.Result.Value)
                    </div>
                    @Html.HiddenFor(x => x.Result.StudentId, new { Value = Model.Student.Id, Name = "StudentId" })
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<button type="button" class="btn btn-primary" data-student-id="@Model.Student.Id" id="backButton">Back</button>

@section scripts
{
    <script>

        var urlGetResultsByStudent =
            "@Url.HttpRouteUrl("ApiAssessmentGetResultsByStudentDataGrid", new {studentId = Model.Student.Id, resultSetId = 9999})";
        var urlStudentDetails = "@Url.HttpRouteUrl("PeopleStudentDetails", new {studentId = 9999})";

        $(document).ready(function() {

            $("#selectedResultSet").on("change",
                function() {
                    changeTableSource("Results",
                        urlGetResultsByStudent.replace("9999", $("#selectedResultSet").val()));
                });


            $("#backButton").on("click",
                function() {
                    location.replace(urlStudentDetails.replace("9999", $("#backButton").attr("data-student-id")));
                });
        });

        function openNewResultModal() {
            $("#newResultSetControl").val($("#selectedResultSet").val());
            $("#NewResultModal").modal('toggle');
        }

        function newResultSuccess(result) {
            $("#NewResultModal").modal('hide');
            toastr.success(result);
            refreshTable("Results");
        }

        function newResultFailure(result) {
            $("#NewResultModal").modal('hide');
            toastr.error(result.responseJSON);
        }
    </script>

    <script type="text/x-jsrender" id="resultsSubjectTemplate">
        <div>
            ${Subject}
        </div>
    </script>

    <script type="text/x-jsrender" id="resultsValueTemplate">
        <div>
            <b>${Value}</b>
        </div>
    </script>


    @Scripts.Render("~/bundles/jqueryval")
}