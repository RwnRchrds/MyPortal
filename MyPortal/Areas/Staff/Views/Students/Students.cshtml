@using MyPortal.Services
@{
    ViewBag.Title = "Students";
    ViewBag.DisplayTitle = "Students";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Students</h1>
</div>

@if (User.HasPermission("ViewStudents"))
{
    <div class="row">
    
        <div class="col-xl-12 col-lg-12">
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Students</h6>
                </div>
                <!-- Card Body -->
                <div class="card-body">
                    
                    @if (User.HasPermission("EditStudents"))
                    {
                        <div class="mb-4">
                            <a class="btn btn-sm btn-primary" href="@Url.Action("NewStudent")"><i class="fas fa-plus"></i> New Student</a>
                        </div>
                    }

                    @Html.EJS().Grid("Students").DataSource(dataManager =>
                    {
                        dataManager.Url(Url.HttpRouteUrl("ApiGetAllStudentsDataGrid", new {})).CrossDomain(false).Adaptor("UrlAdaptor");

                    }).Columns(c =>
                    {
                        c.Field("DisplayName").HeaderText("Name").Template("#nameTemplate").Width("100").Add();
                        c.Field("YearGroupName").HeaderText("Year Group").Width("80").Add();
                        c.Field("RegGroupName").HeaderText("Reg Group").Width("80").Add();
                        c.Field("HouseName").HeaderText("House").Template("#houseTemplate").Width("50").Add();
                    }).AllowPaging().SearchSettings(s => { s.Operator("contains").IgnoreCase(true); }).Toolbar(new List<string>() {"Search"}).PageSettings(p => p.PageSize(12)).AllowSorting().Render()
                </div>
            </div>
        </div>
    
    </div>
}


@section scripts
{
    <script>
        $(document).ready(function() {
        });

        function getStudentOverviewUrl(studentId) {
            var urlStudentOverView = "@Url.Action("StudentOverview", new {studentId = 9999})";

            return urlStudentOverView.replace("9999", studentId);
        }
    </script>

    <script type="text/x-jsrender" id="nameTemplate">
        <div>
            <span id="Studtext" class="student-name"><a href="${getStudentOverviewUrl(Id)}">${DisplayName}</a></span>
        </div>        
    </script>

    <script type="text/x-jsrender" id="houseTemplate">
        <div class="font-weight-bold">
            <span><span class="dot mr-2" style="background-color: ${HouseColourCode}"></span><div class="inline-block m-auto">${HouseName}</div></span>
        </div>
    </script>


}