@model MyPortal.Areas.Staff.ViewModels.Admin.UserDetailsViewModel
@{
    ViewBag.Title = $"User Details: {Model.User.UserName}";
    ViewBag.DisplayTitle = "User Details";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">@Model.User.UserName</h1>
</div>

<div class="row">
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">User Type</div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            @Model.User.UserType.ToString()
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-user-friends fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    @if (Model.AttachedProfile == null)
    {
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-danger shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Attached Person</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                No person attached
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-user fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Attached Person</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.AttachedProfile.Person.GetDisplayName()
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-user fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="row">

    <div class="col-xl-12 col-md-12 mb-4">

        <div class="dropdown mp-btn-top inline-block">
            <button class="btn btn-primary btn-sm px-3 dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-user"></i> User
            </button>

            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <h6 class="dropdown-header">@Model.User.UserName</h6>
                <a class="dropdown-item" data-toggle="modal" data-target="#ChangeUserTypeModal" id="ChangeUserType"><i class="fa fa-fw fa-user-friends"></i> Change User Type</a>
                <a class="dropdown-item" data-toggle="modal" data-target="#AttachPersonModal" id="AttachPerson"><i class="fa fa-fw fa-user-plus"></i> Attach Person</a>
                <a class="dropdown-item" data-toggle="modal" id="DetachPerson"><i class="fa fa-fw fa-user-minus"></i> Detach Person</a>
                <a class="dropdown-item" data-toggle="modal" data-target="#ResetPasswordModal" id="ResetPassword"><i class="fa fa-fw fa-key"></i> Reset Password</a>
                <a class="dropdown-item" id="DeleteUser"><i class="fa fa-fw fa-user-slash"></i> Delete User</a>
            </div>
        </div>

    </div>

</div>

<div class="row">

    <div class="card shadow mb-4">

        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Roles</h6>
        </div>

        <div class="card-body">

            <div class="mb-4">

                <button type="button" class="btn btn-sm btn-primary" id="AddRole" data-toggle="modal" data-target="#AddRoleModal">
                    <i class="fa fa-plus"></i> Add Role
                </button>

            </div>

            @Html.EJS().Grid("Roles").DataSource(d =>
            {
                d.Url(Url.HttpRouteUrl("ApiGetRolesByUserDataGrid", new { userId = Model.User.Id })).CrossDomain(false).Adaptor("UrlAdaptor");
            }).Columns(c =>
            {
                c.Field("Name").HeaderText("Role").Template("#rolesNameTemplate").Add();
                c.HeaderText("Actions").Template("#rolesActionsTemplate").Width("170").Add();
            }).AllowPaging().PageSettings(p => p.PageSize(5)).EnableHover(false).Render()

        </div>

    </div>

</div>

<div id="ResetPasswordModal" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Reset Password - @Model.User.UserName</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = Url.HttpRouteUrl("ApiChangePassword", new { }), HttpMethod = "POST", OnSuccess = "resetPasswordSuccess", OnFailure = "resetPasswordFailure" }, new { id = "ResetPasswordForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Password")
                        @Html.PasswordFor(p => p.ChangePassword.Password, new { @class = "form-control form-control-sm", id = "enteredPassword", Name = "Password" })
                        @Html.ValidationMessageFor(p => p.ChangePassword.Password)

                        @Html.HiddenFor(u => u.ChangePassword.UserId, new { Value = Model.User.Id, id = "userIdControl", Name = "UserId" })
                    </div>
                    <div class="form-group">
                        @Html.Label("Confirm Password")
                        @Html.PasswordFor(p => p.ChangePassword.Confirm, new { @class = "form-control form-control-sm", id = "confirmPassword", Name = "Confirm" })
                        @Html.ValidationMessageFor(p => p.ChangePassword.Confirm)
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary btn-sm" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary btn-sm">Save</button>
                    </div>
                </div>
            }

        </div>
    </div>
</div>


<div id="AddRoleModal" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Role - @Model.User.UserName</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = Url.HttpRouteUrl("ApiAddUserToRole", new { }), HttpMethod = "POST", OnSuccess = "addRoleSuccess", OnFailure = "addRoleFailure" }, new { id = "AddRoleForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Role")
                        @Html.DropDownListFor(r => r.ChangeRole.RoleName, new SelectList(Model.Roles, "Name", "Description"), "Select Role", new { @class = "form-control form-control-sm", Name = "RoleName" })

                        @Html.HiddenFor(u => u.ChangePassword.UserId, new { Value = Model.User.Id, Name = "UserId" })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-sm btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-sm btn-primary">Save</button>
                    </div>
                </div>
            }

        </div>
    </div>
</div>


<div id="AttachPersonModal" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Attach Person - @Model.User.UserName</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = "" }, new { id = "AttachPersonForm" }))
            {
                <div class="modal-body">

                    <div class="form-group">
                        <label>Person Type</label>
                        <select class="form-control form-control-sm" id="userTypeSelect">
                            <option selected disabled>Select Person Type</option>
                            <option value="Staff">Staff</option>
                            <option value="Student">Student</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label class="d-none" id="studentYearGroupSelectLabel">Year Group</label>
                        <select class="form-control form-control-sm disabled d-none" id="studentYearGroupSelect"></select>
                    </div>

                    <div class="form-group">
                        <label class="d-none" id="personSelectLabel">Person</label>
                        <select class="form-control form-control-sm disabled d-none" id="personSelect"></select>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-sm btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-sm btn-primary">Save</button>
                    </div>


                </div>
            }

        </div>
    </div>
</div>

<div id="ChangeUserTypeModal" class="modal fade" role="dialog">
    <div class="modal-dialog">


        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Change User Type - @Model.User.UserName</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = Url.HttpRouteUrl("ApiChangeUserType", new { }), HttpMethod = "POST", OnSuccess = "changeTypeSuccess", OnFailure = "changeTypeFailure" }, new { id = "ChangeTypeForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.HiddenFor(x => x.User.Id, new {Name = "Id"})
                        @Html.Label("User Type")
                        @Html.EnumDropDownListFor(e => e.User.UserType, new {@class = "form-control form-control-sm", Name = "UserType"})
                        @Html.ValidationMessageFor(x => x.User.UserType)
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-sm btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-sm btn-primary">Save</button>
                    </div>
                </div>
            }

        </div>
    </div>
</div>


@section scripts
{
    <script>
        function detachPersonFromUserUrl() {
            var url = "@Url.HttpRouteUrl("ApiDetachPersonFromUser", new{})";

            return url;
        }

        function removeUserFromRoleUrl() {
            var url = "@Url.HttpRouteUrl("ApiRemoveUserFromRole", new {})";

            return url;
        }

        function deleteUserUrl(userId) {
            var url = "@Url.HttpRouteUrl("ApiDeleteUser", new {userId = "abcd"})";

            return url.replace("abcd", userId);
        }

        function getAllStaffMembersUrl() {
            var url = "@Url.HttpRouteUrl("ApiGetAllStaffMembers", new {})";

            return url;
        }

        function getAllYearGroupsUrl() {
            var url = "@Url.HttpRouteUrl("ApiGetAllYearGroups", new {})";

            return url;
        }

        function getStudentsByYearGroupUrl(yearGroupId) {
            var url = "@Url.HttpRouteUrl("ApiGetStudentsByYearGroup", new {yearGroupId = 9999})";

            return url.replace("9999", yearGroupId);
        }

        function attachPersonToUserUrl() {
            var url = "@Url.HttpRouteUrl("ApiAttachPersonToUser", new {})";

            return url;
        }
    </script>

    <script>
        $(document).ready(function () {

            $("#Roles").on("click",
                ".js-delete",
                function() {
                    var button = $(this);
                    var userId = "@Model.User.Id";
                    var roleName = button.attr("data-role-id");
                    bootbox.confirm("Are you sure you want to remove the user from this role?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: removeUserFromRoleUrl(),
                                    data: {userId: userId, roleName: roleName},
                                    method: "POST",
                                    success: function(e) {
                                        location.reload();
                                        toastr.success(e, "Success");
                                    },
                                    error: function(e) {
                                        toastr.error(e.responseJSON, "Error");
                                    }
                                });
                            }
                        });
                });

            $("#DeleteUser").on("click",
                function() {
                    var button = $("#DeleteUser");
                    bootbox.confirm("Are you sure you want to DELETE this user?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: deleteUserUrl("@Model.User.Id"),
                                    method: "DELETE",
                                    success: function(e) {
                                        location.replace("@Url.Action("Users", "Admin")");
                                        toastr.success(e, "Success");
                                    },
                                    error: function(e) {
                                        toastr.error(e.responseJSON, "Error");
                                    }
                                });
                            }
                        });
                });

            $("#DetachPerson").on("click",
                function() {
                    bootbox.confirm("Are you sure you wish to detach the personal profile from this user?",
                        function(result) {
                            if (result) {
                                var data = { Id: "@Model.User.Id" };
                                $.ajax({
                                    url: detachPersonFromUserUrl(),
                                    data: data,
                                    method: "POST",
                                    success: function(e) {
                                        toastr.success(e, "Success");
                                        location.reload();
                                    },
                                    error: function(e) {
                                        toastr.error(e.responseJSON, "Error");
                                    }
                                });
                            }
                        });

                });

            $('#ResetPasswordModal').on('hidden.bs.modal',
                function() {
                    $(this).find('form').trigger('reset');
                });

            $('#AttachPersonModal').on('hidden.bs.modal',
                function() {
                    $(this).find('form').trigger('reset');
                    $("#studentYearGroupSelectLabel").addClass("d-none");
                    $("#studentYearGroupSelect").addClass("disabled");
                    $("#studentYearGroupSelect").addClass("d-none");

                    $("#personSelectLabel").addClass("d-none");
                    $("#personSelect").addClass("disabled");
                    $("#personSelect").addClass("d-none");
                });

            $("#userTypeSelect").on("change",
                function() {

                    $("#studentYearGroupSelectLabel").addClass("d-none");
                    $("#studentYearGroupSelect").addClass("disabled");
                    $("#studentYearGroupSelect").addClass("d-none");

                    $("#personSelectLabel").addClass("d-none");
                    $("#personSelect").addClass("disabled");
                    $("#personSelect").addClass("d-none");

                    if ($("#userTypeSelect").val() !== "") {
                        if ($("#userTypeSelect").val() === "Staff") {
                            $.ajax({
                                url: getAllStaffMembersUrl(),
                                method: "GET",
                                complete: function(data) {
                                    $("#personSelect").empty();
                                    $(data.responseJSON).each(function(i) {
                                        var divData = "<option value=" +
                                            data.responseJSON[i].personId +
                                            ">" +
                                            data.responseJSON[i].person.lastName +
                                            ", " +
                                            data.responseJSON[i].person.firstName +
                                            "</option>";
                                        $(divData).appendTo('#personSelect');
                                    });
                                    $("#personSelect").val("");
                                    $("#personSelect").removeClass("disabled");
                                    $("#personSelectLabel").removeClass("d-none");
                                    $("#personSelect").removeClass("d-none");
                                }
                            });
                        }

                        if ($("#userTypeSelect").val() === "Student") {
                            $.ajax({
                                url: getAllYearGroupsUrl(),
                                method: "GET",
                                complete: function(data) {
                                    $("#yearGroupSelect").empty();
                                    $(data.responseJSON).each(function(i) {
                                        var divData = "<option value=" +
                                            data.responseJSON[i].id +
                                            ">" +
                                            data.responseJSON[i].name +
                                            "</option>";
                                        $(divData).appendTo('#studentYearGroupSelect');
                                    });
                                    $("#studentYearGroupSelect").val("");
                                    $("#studentYearGroupSelect").removeClass("disabled");
                                    $("#studentYearGroupSelectLabel").removeClass("d-none");
                                    $("#studentYearGroupSelect").removeClass("d-none");
                                }
                            });
                        }
                    }

                });

            $("#studentYearGroupSelect").on("change",
                function() {
                    if ($("#studentYearGroupSelect").val() !== "") {
                        $.ajax({
                            url: getStudentsByYearGroupUrl($("#studentYearGroupSelect").val()),
                            method: "GET",
                            complete: function(data) {
                                $("#personSelect").empty();
                                $(data.responseJSON).each(function(i) {
                                    var divData = "<option value=" +
                                        data.responseJSON[i].personId +
                                        ">" +
                                        data.responseJSON[i].person.lastName +
                                        ", " +
                                        data.responseJSON[i].person.firstName +
                                        "</option>";
                                    $(divData).appendTo('#personSelect');
                                });
                                $("#personSelect").val("");
                                $("#personSelect").removeClass("disabled");
                                $("#personSelectLabel").removeClass("d-none");
                                $("#personSelect").removeClass("d-none");
                            }
                        });
                    }
                });

            $("#AttachPersonForm").on("submit",
                function(e) {

                    e.preventDefault();

                    $("#AttachPersonForm").validate();

                    var data = {
                        UserId: "@Model.User.Id",
                        PersonId: $("#personSelect").val()
                    };
                    $.ajax({
                        url: attachPersonToUserUrl(),
                        data: data,
                        method: "POST",
                        success: function() {
                            location.reload();
                        },
                        error: function(result) {
                            $("#AttachPersonModal").modal('hide');
                            toastr.error(result.responseJSON, "Error");
                        }
                    });
                });
        });

        function resetPasswordFailure(result) {
            $("#ResetPasswordModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function addRoleSuccess(result) {
            $("#AddRoleModal").modal('hide');
            toastr.success(result);
            location.reload();
        }

        function addRoleFailure(result) {
            $("#AddRoleModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function changeTypeSuccess(result) {
            $("#ChangeUserTypeModal").modal('hide');
            toastr.success(result);
            location.reload();
        }

        function changeTypeFailure(result) {
            $("#ChangeUserTypeModal").modal('hide');
            toastr.error(result.responseJSON);
        }

    </script>

    <script type="text/x-jsrender" id="rolesNameTemplate">
        <div>
            ${Description}
        </div>
    </script>

    <script type="text/x-jsrender" id="rolesActionsTemplate">
        <div>
            <button type='button' class='btn btn-link js-delete' data-role-Id="${Name}">
                Remove
            </button>
        </div>
    </script>

    @Scripts.Render("~/bundles/jqueryval")
}