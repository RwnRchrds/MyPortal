@model MyPortal.Areas.Staff.ViewModels.Curriculum.SubjectDetailsViewModel
@{
    ViewBag.Title = "Subject Details";
    ViewBag.DisplayTitle = "Subject Details";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">@Model.Subject.Name</h1>
</div>

<div class="row">

    <div class="col-xl-12 col-md-12 mb-4">

        <a class="btn btn-primary btn-sm" href="@Url.Action("Subjects")"><i class="fas fa-arrow-left"></i> Back</a>

    </div>

</div>

<div class="row">

    <div class="col-xl-12 col-lg-12 mb-4">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary"><i class="fas fa-user"></i> Subject Staff</h6>
            </div>
            <!-- Card Body -->
            <div class="card-body">

                <div class="mb-4">
                    <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#newSubjectStaffModal"><i class="fas fa-plus"></i> Add Staff Member</button>
                </div>

                @Html.EJS().Grid("SubjectStaff").DataSource(d =>
                {
                    d.Url(Url.HttpRouteUrl("ApiGetAllSubjectStaffBySubjectDataGrid", new { subjectId = Model.Subject.Id })).CrossDomain(false).Adaptor("UrlAdaptor");
                }).Columns(c =>
                {
                    c.Field("StaffMemberName").HeaderText("Staff").Template("#subjectStaffNameTemplate").Width("150").Add();
                    c.Field("Role").HeaderText("Role").Template("#subjectStaffRoleTemplate").Width("100").Add();
                    c.HeaderText("Actions").Template("#subjectStaffActionsTemplate").Width("170").Add();
                }).AllowPaging().PageSettings(p => p.PageSize(12)).SearchSettings(s => { s.Operator("contains").IgnoreCase(true); }).Toolbar(new List<string>() { "Search" }).Render()
            </div>
        </div>
    </div>

</div>

<div class="row">

    <div class="col-xl-12 col-lg-12">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary"><i class="fas fa-chalkboard-teacher"></i> Classes</h6>
            </div>
            <!-- Card Body -->
            <div class="card-body">
                @Html.EJS().Grid("Classes").DataSource(d =>
                {
                    d.Url(Url.HttpRouteUrl("ApiGetClassesBySubjectDataGrid", new { subjectId = Model.Subject.Id })).CrossDomain(false).Adaptor("UrlAdaptor");
                }).Columns(c =>
                {
                    c.Field("Name").HeaderText("Name").Template("#classesNameTemplate").Width("80").Add();
                    c.Field("Teacher").HeaderText("Main Teacher").Template("#classesTeacherTemplate").Width("200").Add();
                }).AllowPaging().PageSettings(p => p.PageSize(12)).SearchSettings(s => { s.Operator("contains").IgnoreCase(true); }).Toolbar(new List<string>() { "Search" }).Render()
            </div>
        </div>
    </div>

</div>

<div id="newSubjectStaffModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Subject Staff Member</h5>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = Url.HttpRouteUrl("ApiCreateSubjectStaff", new { }), HttpMethod = "POST", OnSuccess = "newSubjectStaffSuccess", OnFailure = "newSubjectStaffFailure" }, new { id = "newSessionForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Staff Member")
                        @Html.DropDownListFor(l => l.SubjectStaffMember.StaffMemberId, new SelectList(Model.StaffMembers, "Key", "Value"), "Select Staff", new { @class = "form-control form-control-sm", Name = "StaffMemberId" })
                        @Html.ValidationMessageFor(l => l.SubjectStaffMember.StaffMemberId)
                    </div>
                    <div class="form-group">
                        @Html.Label("Role")
                        @Html.DropDownListFor(x => x.SubjectStaffMember.RoleId, new SelectList(Model.SubjectRoles, "Key", "Value"), "Select Role", new { @class = "form-control form-control-sm", Name = "RoleId" })
                        @Html.ValidationMessageFor(x => x.SubjectStaffMember.RoleId)
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(x => x.Subject.Id, new { Name = "SubjectId" })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary btn-sm" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary btn-sm">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="editSubjectStaffModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Subject Staff Member</h5>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = Url.HttpRouteUrl("ApiUpdateSubjectStaff", new { }), HttpMethod = "POST", OnSuccess = "editSubjectStaffSuccess", OnFailure = "editSubjectStaffFailure" }, new { id = "editSubjectStaffForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Staff Member")
                        @Html.DropDownListFor(l => l.SubjectStaffMember.StaffMemberId, new SelectList(Model.StaffMembers, "Key", "Value"), "Select Staff", new { @class = "form-control form-control-sm", Name = "StaffMemberId", id = "editStaffMemberIdControl" })
                        @Html.ValidationMessageFor(l => l.SubjectStaffMember.StaffMemberId)
                    </div>
                    <div class="form-group">
                        @Html.Label("Role")
                        @Html.DropDownListFor(x => x.SubjectStaffMember.RoleId, new SelectList(Model.SubjectRoles, "Key", "Value"), "Select Role", new { @class = "form-control form-control-sm", Name = "RoleId", id = "editRoleIdControl" })
                        @Html.ValidationMessageFor(x => x.SubjectStaffMember.RoleId)
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(x => x.Subject.Id, new { Name = "SubjectId" })
                        @Html.HiddenFor(x => x.SubjectStaffMember.Id, new { Name = "Id", id = "editIdControl" })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary btn-sm" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary btn-sm">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts
{
    <script>

        const urlGetSubjectStaffById = "@Url.HttpRouteUrl("ApiGetSubjectStaffById", new {subjectStaffId = 9999})";
        const urlDeleteSubjectStaff = "@Url.HttpRouteUrl("ApiDeleteSubjectStaff", new {subjectStaffId = 9999})";

        $(document).ready(function() {
            $('.modal').on('hidden.bs.modal',
                function() {
                    $(this).find('form').trigger('reset');
                });

            $("#SubjectStaff").on("click",
                ".js-edit",
                function() {
                    var button = $(this);
                    var staffId = button.attr("data-staff-id");
                    $.ajax({
                        url: urlGetSubjectStaffById.replace("9999", staffId),
                        method: "GET",
                        success: function(result) {
                            $("#editStaffMemberIdControl").val(result["staffMemberId"]);
                            $("#editRoleIdControl").val(result["roleId"]);
                            $("#editIdControl").val(result["id"]);
                        },
                        error: function() {
                            toastr.error("Failed to load subject staff data");
                        }
                    });
                    $("#editSubjectStaffModal").modal('toggle');
                });

            $("#SubjectStaff").on("click",
                ".js-delete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to remove this staff member from the subject?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: urlDeleteSubjectStaff.replace("9999", button.attr("data-staff-id")),
                                    method: "DELETE",
                                    success: function(a) {
                                        toastr.success(a);
                                        refreshTable("SubjectStaff");
                                    },
                                    error: function(e) {
                                        toastr.error(e.responseJSON);
                                    }
                                });
                            }
                        });
                });
        });

        function newSubjectStaffSuccess(result) {
            $("#newSubjectStaffModal").modal('hide');
            refreshTable("SubjectStaff");
            toastr.success(result);
        }

        function newSubjectStaffFailure(result) {
            $("#newSubjectStaffModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function editSubjectStaffSuccess(result) {
            $("#editSubjectStaffModal").modal('hide');
            refreshTable("SubjectStaff");
            toastr.success(result);
        }

        function editSubjectStaffFailure(result) {
            $("#editSubjectStaffModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function getClassDetailsUrl(classId) {
            const url = "@Url.Action("ClassDetails", new {classId = 9999})";
            return url.replace("9999", classId);
        }
    </script>

    <script id="subjectStaffNameTemplate" type="text/x-jsrender">
        <div>
            ${StaffMemberName}
        </div>
    </script>

    <script id="subjectStaffRoleTemplate" type="text/x-jsrender">
        <div>
            ${Role}
        </div>
    </script>

    <script id="subjectStaffActionsTemplate" type="text/x-jsrender">
        <div>
            <button class="btn btn-link js-edit" type="button" data-staff-id="${Id}">Edit</button>
            <button class="btn btn-link js-delete" type="button" data-staff-id="${Id}">Delete</button>
        </div>
    </script>

    <script type="text/x-jsrender" id="classesNameTemplate">
        <div>
            <span id="NameText" class="student-name"><a href="${getClassDetailsUrl(Id)}">${Name}</a></span>
        </div>
    </script>

    <script type="text/x-jsrender" id="classesTeacherTemplate">
        <div>
            ${Teacher}
        </div>
    </script>
}

