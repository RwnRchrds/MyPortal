@model MyPortal.Areas.Staff.ViewModels.SessionsViewModel
@{
    ViewBag.Title = "Class Details";
    ViewBag.DisplayTitle = "Class Details";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">@Model.Class.Name</h1>
</div>

<div class="row">

    <div class="col-xl-12 col-md-12 mb-4">

        <a class="btn btn-primary btn-sm" href="@Url.Action("Classes")"><i class="fas fa-arrow-left"></i> Back</a>

    </div>

</div>

<div class="row">

    <div class="col-xl-12 col-lg-12 mb-4">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary"><i class="fas fa-user-graduate"></i> Students</h6>
            </div>
            <!-- Card Body -->
            <div class="card-body">

                <div class="mb-4">
                    <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#newEnrolIndModal"><i class="fas fa-plus"></i> Add Student</button>
                    <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#newEnrolGroupModal"><i class="fas fa-plus"></i> Add Group</button>
                </div>

                @Html.EJS().Grid("Enrolments").DataSource(d =>
                {
                    d.Url(Url.HttpRouteUrl("ApiGetEnrolmentsByClassDataGrid", new { classId = Model.Class.Id })).CrossDomain(false).Adaptor("UrlAdaptor");
                }).Columns(c =>
                {
                    c.Field("StudentName").HeaderText("Student").Template("#enrolmentsStudentTemplate").Width("150").Add();
                    c.HeaderText("Actions").Template("#enrolmentsActionsTemplate").Width("200").Add();
                }).AllowPaging().PageSettings(p => p.PageSize(12)).SearchSettings(s => { s.Operator("contains").IgnoreCase(true); }).Toolbar(new List<string>() { "Search" }).Render()
            </div>
        </div>
    </div>

</div>

<div class="row">

    <div class="col-xl-12 col-lg-12 mb-4">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary"><i class="fas fa-calendar-day"></i> Sessions</h6>
            </div>
            <!-- Card Body -->
            <div class="card-body">

                <div class="mb-4">
                    <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#newSessionModal"><i class="fas fa-plus"></i> Add Session</button>
                    <button type="button" class="btn btn-primary btn-sm" id="addRegPeriods"><i class="fas fa-plus"></i> Add Reg Sessions</button>
                </div>

                @Html.EJS().Grid("Sessions").DataSource(d =>
                {
                    d.Url(Url.HttpRouteUrl("ApiGetSessionsByClassDataGrid", new { classId = Model.Class.Id })).CrossDomain(false).Adaptor("UrlAdaptor");
                }).Columns(c =>
                {
                    c.Field("PeriodName").HeaderText("Period").Template("#sessionsPeriodTemplate").Width("150").Add();
                    c.HeaderText("Actions").Template("#sessionsActionsTemplate").Width("170").Add();
                }).AllowPaging().PageSettings(p => p.PageSize(12)).SearchSettings(s => { s.Operator("contains").IgnoreCase(true); }).Toolbar(new List<string> { "Search" }).Render()
            </div>
        </div>
    </div>

</div>

<div id="newSessionModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Period for Class</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = Url.HttpRouteUrl("ApiCreateSession", new { }), HttpMethod = "POST", OnSuccess = "newSessionSuccess", OnFailure = "newSessionFailure" }, new { id = "newSessionForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Period")
                        @Html.DropDownListFor(l => l.Session.PeriodId, new SelectList(Model.Periods, "Id", "Name"), "Select Period", new { @class = "form-control form-control-sm", Name = "PeriodId" })
                        @Html.ValidationMessageFor(l => l.Class.SubjectId)
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(x => x.Class.Id, new { Name = "ClassId" })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary btn-sm" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary btn-sm">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="editSessionModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit Session</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = Url.HttpRouteUrl("ApiUpdateSession", new { }), HttpMethod = "POST", OnSuccess = "editSessionSuccess", OnFailure = "editSessionFailure" }, new { id = "editSessionForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Period")
                        @Html.DropDownListFor(l => l.Session.PeriodId, new SelectList(Model.Periods, "Id", "Name"), "Select Period", new { @class = "form-control form-control-sm", Name = "PeriodId", id = "editPeriodControl" })
                        @Html.ValidationMessageFor(l => l.Class.SubjectId)
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(x => x.Class.Id, new { Name = "ClassId", id = "editClassControl" })
                        @Html.HiddenFor(x => x.Session.Id, new { Name = "Id", id = "editIdControl" })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary btn-sm" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary btn-sm">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="newEnrolIndModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Enrol Student</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = Url.HttpRouteUrl("ApiCreateEnrolment", new { }), HttpMethod = "POST", OnSuccess = "newEnrolIndSuccess", OnFailure = "newEnrolIndFailure" }, new { id = "newEnrolmentForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        <label>Year Group</label>
                        <select class="form-control form-control-sm" id="yearGroupSelect"></select>
                    </div>
                    <div class="form-group" id="selectStudentArea">
                        <label class="d-none" id="studentLabel">Student</label>
                        <select class="form-control form-control-sm disabled d-none" id="studentSelect" name="StudentId"></select>
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(x => x.Class.Id, new { Name = "ClassId" })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary btn-sm" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary btn-sm">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="newEnrolGroupModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Enrol Group</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = Url.HttpRouteUrl("ApiEnrolRegGroup", new { }), HttpMethod = "POST", OnSuccess = "newEnrolGroupSuccess", OnFailure = "newEnrolGroupFailure" }, new { id = "newEnrolmentForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        <label>Reg Group</label>
                        <select class="form-control form-control-sm" id="regGroupSelect" name="GroupId"></select>
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(x => x.Class.Id, new { Name = "ClassId" })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary btn-sm" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary btn-sm">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts
{
    <script>

        var urlGetSessionById = "@Url.HttpRouteUrl("ApiGetSessionById", new {sessionId = 9999})";
        var urlDeleteSession = "@Url.HttpRouteUrl("ApiDeleteSession", new {sessionId = 9999})";
        var urlAddRegPeriods = "@Url.HttpRouteUrl("ApiCreateSessionsForRegPeriods", new {})";
        var urlGetAllYearGroups = "@Url.HttpRouteUrl("ApiGetAllYearGroups", new {})";
        var urlGetAllRegGroups = "@Url.HttpRouteUrl("ApiGetAllRegGroups", new {})";
        var urlGetStudentsByYearGroup =
            "@Url.HttpRouteUrl("ApiGetStudentsByYearGroup", new {yearGroupId = 9999})";
        var urlDeleteEnrolment = "@Url.HttpRouteUrl("ApiDeleteEnrolment", new {enrolmentId = 9999})";

        $(document).ready(function() {
            $('.modal').on('hidden.bs.modal',
                function() {
                    $(this).find('form').trigger('reset');
                });

            $("#Sessions").on("click",
                ".js-edit",
                function() {
                    var button = $(this);
                    var sessionId = button.attr("data-session-id");
                    $.ajax({
                        url: urlGetSessionById.replace("9999", sessionId),
                        method: "GET",
                        success: function(result) {
                            $("#editPeriodControl").val(result["periodId"]);
                            $("#editClassControl").val(result["classId"]);
                            $("#editIdControl").val(result["id"]);
                        },
                        error: function() {
                            toastr.error("Failed to load Session data");
                        }
                    });
                    $("#editSessionModal").modal('toggle');
                });

            $("#Sessions").on("click",
                ".js-delete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to delete this Session?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: urlDeleteSession.replace("9999", button.attr("data-session-id")),
                                    method: "DELETE",
                                    success: function(a) {
                                        refreshTable("Sessions");
                                        toastr.success(a);
                                    },
                                    error: function(e) {
                                        toastr.error(e.responseJSON);
                                    }
                                });
                            }
                        });
                });

            $("#addRegPeriods").on("click",
                function () {
                    bootbox.confirm("Are you sure you wish to assign all reg periods?",
                        function (result) {
                            if (result) {
                                $.ajax({
                                    url: urlAddRegPeriods,
                                    data: {classId: @Model.Class.Id, periodId: 0},
                                    method: "POST",
                                    success: function (a) {
                                        refreshTable("Sessions");
                                        toastr.success(a);
                                    },
                                    error: function (e) {
                                        toastr.error(e.responseJSON);
                                    }
                                });
                            }
                        });
                });

            $("#newEnrolIndModal").on('hidden.bs.modal',
                function() {
                    resetIndForm();
                });

            $("#backButton").on("click",
                function () {
                    location.replace("@Url.Action("Classes")");
                });

            $.ajax({
                url: urlGetAllYearGroups,
                method: "GET",
                complete: function (data) {
                    $("#yearGroupSelect").empty();
                    $(data.responseJSON).each(function (i) {
                        var divData = "<option value=" +
                            data.responseJSON[i].id +
                            ">" +
                            data.responseJSON[i].name +
                            "</option>";
                        $(divData).appendTo('#yearGroupSelect');
                    });
                    $("#yearGroupSelect").val("");
                }
            });

            $.ajax({
                url: urlGetAllRegGroups,
                method: "GET",
                complete: function (data) {
                    $("#regGroupSelect").empty();
                    $(data.responseJSON).each(function (i) {
                        var divData = "<option value=" +
                            data.responseJSON[i].id +
                            ">" +
                            data.responseJSON[i].name +
                            "</option>";
                        $(divData).appendTo('#regGroupSelect');
                    });
                    $("#regGroupSelect").val("");
                }
            });

            $("#yearGroupSelect").on("change",
                function () {
                    if ($("#yearGroupSelect").val() !== "") {
                        $.ajax({
                            url: urlGetStudentsByYearGroup.replace("9999", $("#yearGroupSelect").val()),
                            method: "GET",
                            complete: function (data) {
                                $("#studentSelect").empty();
                                $(data.responseJSON).each(function (i, student) {
                                    var divData = "<option value=" +
                                        data.responseJSON[i].id +
                                        ">" +
                                        data.responseJSON[i].person.lastName +
                                        ", " +
                                        data.responseJSON[i].person.firstName +
                                        "</option>";
                                    $(divData).appendTo('#studentSelect');
                                });
                                $("#studentSelect").val("");
                            }
                        });
                        $("#studentSelect").removeClass("d-none");
                        $("#studentSelect").removeClass("disabled");
                        $("#studentLabel").removeClass("d-none");
                    }
                });

            $("#Enrolments").on("click",
                ".js-delete",
                function () {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to remove this student from the class?",
                        function (result) {
                            if (result) {
                                $.ajax({
                                    url: urlDeleteEnrolment.replace("9999", button.attr("data-enrolment-id")),
                                    method: "DELETE",
                                    success: function (a) {
                                        toastr.success(a);
                                        refreshTable("Enrolments");
                                    },
                                    error: function (e) {
                                        toastr.error(e.responseJSON);
                                    }
                                });
                            }
                        });
                });
        });

        function newEnrolIndSuccess(result) {
            $("#newEnrolIndModal").modal('hide');
            refreshTable("Enrolments");
            toastr.success(result);
        }

        function newEnrolIndFailure(result) {
            $("#newEnrolIndModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function newEnrolGroupSuccess(result) {
            $("#newEnrolGroupModal").modal('hide');
            refreshTable("Enrolments");
            toastr.success(result);
        }

        function newEnrolGroupFailure(result) {
            $("#newEnrolGroupModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function resetIndForm() {
            $("#studentSelect").val("");
            $("#studentLabel").addClass("d-none");
            $("#studentSelect").addClass("d-none");
            $("#studentSelect").addClass("disabled");
            $("#yearGroupSelect").val("");
        }

        function resetGroupForm() {
            $("#regGroupSelect").val("");
        }


        function newSessionSuccess(result) {
            $("#newSessionModal").modal('hide');
            refreshTable("Sessions");
            toastr.success(result);
        }

        function newSessionFailure(result) {
            $("#newClassModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function editSessionSuccess(result) {
            $("#editClassModal").modal('hide');
            refreshTable("Sessions");
            toastr.success(result);
        }

        function editSessionFailure(result) {
            $("#editClassModal").modal('hide');
            toastr.error(result.responseJSON);
        }

    </script>

    <script type="text/x-jsrender" id="sessionsPeriodTemplate">
        <div>
            ${PeriodName}
        </div>
    </script>

    <script type="text/x-jsrender" id="sessionsActionsTemplate">
        <div>
            <button type='button' class='btn btn-primary btn-sm mr-1 js-edit' data-session-id="${Id}">
                <i class="far fa-edit"></i> Edit
            </button>

            <button type='button' class='btn btn-danger btn-sm js-delete' data-session-id="${Id}">
                <i class="far fa-trash-alt"></i> Delete
            </button>
        </div>
    </script>

    <script type="text/x-jsrender" id="enrolmentsStudentTemplate">
        <div>
            ${StudentName}
        </div>
    </script>

    <script type="text/x-jsrender" id="enrolmentsActionsTemplate">
        <div>
            <button type='button' class='btn btn-sm btn-danger js-delete' data-enrolment-id="${Id}">
                <i class="far fa-trash-alt"></i> Remove
            </button>
        </div>
    </script>
}