@model MyPortal.Areas.Staff.ViewModels.LessonPlansViewModel

@{
    ViewBag.Title = "Lesson Plans";
    ViewBag.DisplayTitle = "Lesson Plans";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Lesson Plans</h1>
</div>

<div class="row">
    
    <div class="col-xl-12 col-md-12 mb-4">

        <button type="button" class="btn btn-primary mp-btn-top-auto" data-toggle="modal" onclick="openNewLessonPlanModal()">New Lesson Plan</button>

    </div>

</div>

<div class="row">
    
    <div class="col-xl-12 col-md-12 mb-4">
        
        <div class="form-group">
            @Html.Label("Study Topic")
            @Html.DropDownList("SelectedTopic", new SelectList(Model.StudyTopics, "Id", "Name"), "Select Study Topic", new {@class = "form-control", Name = "Id", id = "selectedTopic"})
        </div>

    </div>

</div>

<div class="row">
    
    <div class="col-xl-12 col-lg-12">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Lesson Plans</h6>
            </div>
            <!-- Card Body -->
            <div class="card-body">
                @Html.EJS().Grid("LessonPlans").DataSource(d => { d.Url(Url.HttpRouteUrl("ApiGetLessonPlansByStudyTopicDataGrid", new {studyTopicId = 0})).CrossDomain(false).Adaptor("UrlAdaptor"); }).Columns(c =>
                {
                    c.Field("Title").HeaderText("Title").Template("#lessonPlansTitleTemplate").Width("300").Add();
                    c.Field("StudyTopic").HeaderText("StudyTopic").Template("#lessonPlansStudyTopicTemplate").Width("200").Add();
                    c.Field("Author").HeaderText("Author").Template("#lessonPlansAuthorTemplate").Width("150").Add();
                    c.HeaderText("Actions").Template("#lessonPlansActionsTemplate").Width("170").Add();
                }).AllowPaging().PageSettings(p => p.PageSize(12)).SearchSettings(s => { s.Operator("contains").IgnoreCase(true); }).Toolbar(new List<string> {"Search"}).Render()
            </div>
        </div>
    </div>
    
</div>

<div id="NewLessonPlanModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">New Lesson Plan</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions {Url = Url.HttpRouteUrl("ApiCreateLessonPlan", new {}), HttpMethod = "POST", OnSuccess = "newLessonPlanSuccess", OnFailure = "newLessonPlanFailure"}, new {id = "newLessonPlanForm"}))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(x => x.LessonPlan.StudyTopicId)
                        @Html.DropDownListFor(l => l.LessonPlan.StudyTopicId, new SelectList(Model.StudyTopics, "Id", "Name"), "Select Study Topic", new {@class = "form-control mp-input-long", Name = "StudyTopicId", id = "newStudyTopicControl"})
                        @Html.ValidationMessageFor(x => x.LessonPlan.StudyTopicId)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.LessonPlan.Title)
                        @Html.TextBoxFor(x => x.LessonPlan.Title, new {@class = "form-control mp-input-long", Name = "Title"})
                        @Html.ValidationMessageFor(x => x.LessonPlan.Title)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.LessonPlan.LearningObjectives)
                        @Html.TextAreaFor(x => x.LessonPlan.LearningObjectives, new {@class = "form-control mp-textarea-long", Name = "LearningObjectives"})
                        @Html.ValidationMessageFor(x => x.LessonPlan.LearningObjectives)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.LessonPlan.PlanContent)
                        @Html.TextAreaFor(x => x.LessonPlan.PlanContent, new {@class = "form-control mp-textarea-lg", Name = "PlanContent"})
                        @Html.ValidationMessageFor(x => x.LessonPlan.PlanContent)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.LessonPlan.Homework)
                        @Html.TextAreaFor(x => x.LessonPlan.Homework, new {@class = "form-control mp-textarea-long", Name = "Homework"})
                        @Html.ValidationMessageFor(x => x.LessonPlan.Homework)
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="EditLessonPlanModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit Lesson Plan</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions {Url = Url.HttpRouteUrl("ApiUpdateLessonPlan", new {}), HttpMethod = "POST", OnSuccess = "editLessonPlanSuccess", OnFailure = "editLessonPlanFailure"}, new {id = "editLessonPlanForm"}))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(x => x.LessonPlan.StudyTopicId)
                        @Html.DropDownListFor(l => l.LessonPlan.StudyTopicId, new SelectList(Model.StudyTopics, "Id", "Name"), "Select Comment Bank", new {@class = "form-control mp-input-long", Name = "StudyTopicId", id = "editStudyTopicControl"})
                        @Html.ValidationMessageFor(x => x.LessonPlan.StudyTopicId)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.LessonPlan.Title)
                        @Html.TextBoxFor(x => x.LessonPlan.Title, new {@class = "form-control mp-input-long", Name = "Title", id = "editTitleControl"})
                        @Html.ValidationMessageFor(x => x.LessonPlan.Title)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.LessonPlan.LearningObjectives)
                        @Html.TextAreaFor(x => x.LessonPlan.LearningObjectives, new {@class = "form-control mp-textarea-long", Name = "LearningObjectives", id = "editLearningObjectivesControl"})
                        @Html.ValidationMessageFor(x => x.LessonPlan.LearningObjectives)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.LessonPlan.PlanContent)
                        @Html.TextAreaFor(x => x.LessonPlan.PlanContent, new {@class = "form-control mp-textarea-lg", Name = "PlanContent", id = "editPlanContentControl"})
                        @Html.ValidationMessageFor(x => x.LessonPlan.PlanContent)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.LessonPlan.Homework)
                        @Html.TextAreaFor(x => x.LessonPlan.Homework, new {@class = "form-control mp-textarea-long", Name = "Homework", id = "editHomeworkControl"})
                        @Html.ValidationMessageFor(x => x.LessonPlan.Homework)
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(x => x.LessonPlan.Id, new {Name = "Id", id = "editIdControl"})
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts
{
    <script>

        var urlGetLessonPlansByStudyTopic =
            "@Url.HttpRouteUrl("ApiGetLessonPlansByStudyTopicDataGrid", new {studyTopicId = 9999})";
        var urlGetLessonPlanById = "@Url.HttpRouteUrl("ApiGetLessonPlanById", new {lessonPlanId = 9999})";
        var urlViewLessonPlan = "@Url.HttpRouteUrl("CurriculumLessonPlanDetails", new {id = "abcd"})";
        var urlDeleteLessonPlan = "@Url.HttpRouteUrl("ApiDeleteLessonPlan", new {lessonPlanId = 9999})";

        $(document).ready(function() {
            $('.modal').on('hidden.bs.modal',
                function() {
                    $(this).find('form').trigger('reset');
                });

            $("#selectedTopic").on("change",
                function() {
                    var studyTopicId = $("#selectedTopic").val();
                    changeTableSource("LessonPlans", urlGetLessonPlansByStudyTopic.replace("9999", studyTopicId));
                    refreshTable("LessonPlans");
                });

            $("#LessonPlans").on("click",
                ".js-edit",
                function() {
                    var button = $(this);
                    var planId = button.attr("data-plan-id");
                    $.ajax({
                        url: urlGetLessonPlanById.replace("9999", planId),
                        method: "GET",
                        success: function(result) {
                            $("#editStudyTopicControl").val(result["studyTopicId"]);
                            $("#editTitleControl").val(result["title"]);
                            $("#editLearningObjectivesControl").val(result["learningObjectives"]);
                            $("#editPlanContentControl").val(result["planContent"]);
                            $("#editHomeworkControl").val(result["homework"]);
                            $("#editIdControl").val(result["id"]);
                        },
                        error: function() {
                            toastr.error("Failed to load lesson plan data");
                        }
                    });
                    $("#EditLessonPlanModal").modal('toggle');
                });

            $("#LessonPlans").on("click",
                ".js-view",
                function() {
                    var button = $(this);
                    location.href = urlViewLessonPlan.replace("abcd", button.attr("data-plan-id"));
                });

            $("#LessonPlans").on("click",
                ".js-delete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to delete this lesson plan?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: urlDeleteLessonPlan.replace("9999", button.attr("data-plan-id")),
                                    method: "DELETE",
                                    success: function(a) {
                                        refreshTable("LessonPlans");
                                        toastr.success(a);
                                    },
                                    error: function(e) {
                                        toastr.error(e.responseJSON);
                                    }
                                });
                            }
                        });
                });
        });

        function newLessonPlanSuccess(result) {
            $("#NewLessonPlanModal").modal('hide');
            refreshTable("LessonPlans");
            toastr.success(result);
        }

        function newLessonPlanFailure(result) {
            $("#NewLessonPlanModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function editLessonPlanSuccess(result) {
            $("#EditLessonPlanModal").modal('hide');
            refreshTable("LessonPlans");
            toastr.success(result);
        }

        function editLessonPlanFailure(result) {
            $("#EditLessonPlanModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function openNewLessonPlanModal() {
            var studyTopic = $("#selectedTopic").val();

            if (studyTopic !== "") {
                $("#newStudyTopicControl").val(studyTopic);
                $("#NewLessonPlanModal").modal('toggle');
            }
        }
    </script>

    <script type="text/x-jsrender" id="lessonPlansTitleTemplate">
        <div>
            ${Title}
        </div>
    </script>

    <script type="text/x-jsrender" id="lessonPlansStudyTopicTemplate">
            <div>
                ${StudyTopic}
            </div>
        </script>

    <script type="text/x-jsrender" id="lessonPlansAuthorTemplate">
            <div>
                ${Author}
            </div>
        </script>

    <script type="text/x-jsrender" id="lessonPlansActionsTemplate">
            <div>
                <button type='button' class='btn btn-xs btn-success mp-btn-action js-view' data-plan-id="${Id}">
                    <i class="fas fa-glasses"></i>
                </button>
                
                <button type='button' class='btn btn-xs btn-warning mp-btn-action js-edit' data-plan-id="${Id}">
                    <i class="fas fa-edit"></i>
                </button>
                
                <button type='button' class='btn btn-xs btn-danger mp-btn-action js-delete' data-plan-id="${Id}">
                    <i class="far fa-trash-alt"></i>
                </button>
            </div>
        </script>
}