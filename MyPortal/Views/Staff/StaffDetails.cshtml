@model MyPortal.ViewModels.StaffDetailsViewModel
@{
    ViewBag.Title = "Staff Details";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}

<div class="container float-left" id="title">
    <h2 class="mp-page-title">@Model.Staff.Title @Model.Staff.FirstName.Substring(0, 1) @Model.Staff.LastName</h2>
    <hr/>
</div>


<div class="container float-left" id="container-1">

    @if (User.IsInRole("SeniorStaff"))
    {
        <button type="button" class="btn btn-warning mp-btn-top-auto" id="EditDetailsButton" data-toggle="modal" data-target="#EditDetailsForm">
            <i class="far fa-id-card"></i> Edit Details
        </button>

        <button type="button" class="btn btn-danger mp-btn-top-auto" id="DeleteStaffButton" data-toggle="modal" data-staff-id="@Model.Staff.Id">
            <i class="fas fa-user-slash"></i> Delete Staff
        </button>

        <hr/>
    }

</div>

<!-- MyDetails Panel -->
<div class="container float-left mp-shrink-width" id="details">
    <div>

        <div class="card border-primary mp-card">
            <div class="card-header bg-primary">MyDetails</div>
            <div class="card-body">
                <table class="table-condensed mp-table-condensed">
                    <tr>
                        <td>
                            <b>Title</b>
                        </td>
                        <td>@Model.Staff.Title</td>
                    </tr>
                    <tr>
                        <td>
                            <b>First Name</b>
                        </td>
                        <td>@Model.Staff.FirstName</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Last Name</b>
                        </td>
                        <td>@Model.Staff.LastName</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Staff Code</b>
                        </td>
                        <td>@Model.Staff.Code</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="container float-left mp-margin-top">
    <div>
        <hr/>
        <h4 class="mp-bold">MyTraining</h4>
        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#NewCertModal">
            <i class="fa fa-plus-circle"></i> New Certificate
        </button>
        <table class="table table-bordered mp-table" id="certs" data-staff-id="@Model.Staff.Id">
            <thead>
            <tr>
                <th>Course</th>
                <th>Description</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
            </thead>
        </table>
    </div>
</div>

<!-- MyDocuments Panel -->
<div class="container float-left mp-margin-top">
    <div>
        <hr />
        <h4 class="mp-bold">MyDocuments</h4>
        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#NewDocumentModal">
            <i class="fa fa-plus-circle"></i> Add Document
        </button>
        <table class="table table-bordered mp-table mp-table-link" id="documents" data-staff-id="@Model.Staff.Id">
            <thead>
                <tr>
                    <th>Description</th>
                    <th>Date</th>
                    <th>Actions</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<!-- New Certificate Form -->
<div id="NewCertModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">New Certificate - @Model.Staff.LastName, @Model.Staff.FirstName</h4>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true"></span>&times;
                </button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = "" }, new { id = "newCertForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(l => l.TrainingCertificate.CourseId)
                        @Html.DropDownListFor(l => l.TrainingCertificate.CourseId, new SelectList(Model.TrainingCourses, "Id", "Description"), "Select Course", new {@class = "form-control", Name="CourseId"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(l => l.TrainingCertificate.StatusId)
                        @Html.DropDownListFor(l => l.TrainingCertificate.StatusId, new SelectList(Model.TrainingStatuses, "Id", "Name"), "Select Status", new {@class = "form-control", Name="StatusId"})
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(l => l.TrainingCertificate.StaffId, new {Value = Model.Staff.Id, Name="StaffId"})
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }

        </div>
    </div>
</div>

<div id="EditCertModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit Certificate - @Model.Staff.LastName, @Model.Staff.FirstName</h4>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true"></span>&times;
                </button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = "" }, new { id = "EditCertForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(l => l.TrainingCertificate.CourseId)
                        @Html.TextBox("display", null, new { @class = "form-control", id = "EditCertCourseDisplay", @readonly = "" })
                        @Html.HiddenFor(l => l.TrainingCertificate.CourseId, new { id = "EditCertCourseControl", Name = "CourseId" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(l => l.TrainingCertificate.StatusId)
                        @Html.DropDownListFor(l => l.TrainingCertificate.StatusId, new SelectList(Model.TrainingStatuses, "Id", "Name"), "Select Status", new { @class = "form-control", Name = "StatusId", id = "EditCertStatusControl" })
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(l => l.TrainingCertificate.StaffId, new { Value = Model.Staff.Id, Name = "StaffId", id = "EditCertStaffControl" })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }

        </div>
    </div>
</div>

<div id="NewDocumentModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Document - @Model.Staff.LastName, @Model.Staff.FirstName</h4>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true"></span>&times;
                </button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions {Url = ""}, new {id = "newDocumentForm"}))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(x => x.Upload.Document.Description)
                        @Html.TextBoxFor(x => x.Upload.Document.Description, new {@class = "form-control", Name = "Document.Description"})
                        @Html.ValidationMessageFor(x => x.Upload.Document.Description)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Upload.Document.Url)
                        @Html.TextBoxFor(x => x.Upload.Document.Url, new {@class = "form-control", Name = "Document.Url"})
                        @Html.ValidationMessageFor(x => x.Upload.Document.Url)
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(x => x.Upload.StaffId, new {@class = "form-control", Value = Model.Staff.Id, Name = "StaffId"})
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts
{
    <script>
        //When Page Has Loaded, Prepare Scripts
        $(document).ready(function() {
            //Clear Modal When Closed
            $('#NewCertModal').on('hidden.bs.modal',
                function() {
                    $(this).find('form').trigger('reset');
                });

            $('#NewDocumentModal').on('hidden.bs.modal',
                function() {
                    $(this).find('form').trigger('reset');
                });

            $('#EditCertModal').on('hidden.bs.modal',
                function () {
                    $(this).find('form').trigger('reset');
                });

            //Delete Log When Button Clicked
            $("#certs").on("click",
                ".js-delete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to delete this certificate?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/staff/certificates/delete/" +
                                        $("#certs").attr("data-staff-id") +
                                        "/" +
                                        button.attr("data-course-id"),
                                    method: "DELETE",
                                    success: function(a) {
                                        toastr.success(a);
                                        $("#certs").DataTable().ajax.reload();
                                    },
                                    error: function(a) {
                                        toastr.error(a.responseJSON);
                                    }
                                });
                            }
                        });
                });

            $("#DeleteStaffButton").on("click",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to delete this staff member?" +
                        "\nThis will delete all items associated with this staff member.",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/staff/delete/" + button.attr("data-staff-id"),
                                    method: "DELETE",
                                    success: function(a) {
                                        location.replace("/Staff/Staff");
                                        toastr.success(a);
                                    },
                                    error: function(a) {
                                        toastr.error(a.responseJSON);
                                    }
                                });
                            }
                        });
                });

            $("#certs").on("click",
                ".js-edit",
                function () {
                    var button = $(this);
                    var courseId = button.attr("data-course-id");
                    var staffId = "@Model.Staff.Id";
                    $.ajax({
                        url: "/api/staff/certificates/fetch/" + staffId + "/" + courseId,
                        method: "GET",
                        success: function (result) {     
                            $("#EditCertCourseDisplay").val(result["trainingCourse"].description);
                            $("#EditCertCourseControl").val(result["courseId"]);
                            $("#EditCertStatusControl").val(result["statusId"]);
                            $("#EditCertStaffControl").val(result["staffId"]);
                        },
                        error: function () {
                            toastr.error("Failed to load certificate data");
                        }
                    });
                    $("#EditCertModal").modal('toggle');
                });

            $("#EditCertForm").on("submit",
                function (e) {

                    e.preventDefault();

                    var form = $("#EditCertForm");
                    var data = form.serialize();

                    $.ajax({
                        url: "/api/staff/certificates/update",
                        data: data,
                        method: "POST",
                        success: function (result) {
                            $("#EditCertModal").modal('hide');
                            toastr.success(result);
                            $("#certs").DataTable().ajax.reload();
                        },
                        error: function (result) {
                            toastr.error(result.responseJSON);
                            form.reset();
                        }
                    });
                });

            $("#documents").DataTable({
                ajax: {
                    url: "/api/staff/documents/fetch/" + $("#documents").attr("data-staff-id"),
                    dataSrc: "",
                    method: "GET"
                },
                columns: [
                    {
                        data: "document.description",
                        render: function(data, type, document) {
                            return "<a href='" +
                                document.document.url +
                                "' target='_blank'>" +
                                document.document.description +
                                "</a>";
                        }

                    },
                    {
                        data: "document.date",
                        render: function(data) {
                            var date = new Date(data);
                            return date.toLocaleDateString();
                        }
                    },
                    {
                        data: "id",
                        render: function(data) {
                            return "<button type='button' class='btn btn-xs btn-warning js-edit' data-document-id=" +
                                data +
                                "><i class=\"far fa-edit\"></i></button> " +
                                "<button type='button' class='btn btn-xs btn-danger js-delete' data-document-id=" +
                                data +
                                "><i class=\"far fa-trash-alt\"></i></button>";
                        }
                    }
                ],
                paging: false,
                ordering: false,
                searching: false,
                info: false,
                responsive: true,
                "language": {
                    "emptyTable": "No documents to display"
                }
            });

            $("#certs").DataTable({
                ajax: {
                    url: "/api/staff/certificates/fetch/" + $("#certs").attr("data-staff-id"),
                    dataSrc: "",
                    method: "GET"
                },
                columns: [
                    {
                        data: "trainingCourse.code"
                    },
                    {
                        data: "trainingCourse.description"
                    },
                    {
                        data: "trainingStatus.name"
                    },
                    {
                        data: "courseId",
                        render: function(data) {
                            return "<button type='button' class='btn btn-xs btn-warning js-edit' data-course-id=" +
                                data +
                                "><i class=\"far fa-edit\"></i></button> " +
                                "<button type='button' class='btn btn-xs btn-danger js-delete' data-course-id=" +
                                data +
                                "><i class=\"far fa-trash-alt\"></i></button>";
                        }
                    }
                ],
                paging: false,
                ordering: false,
                searching: false,
                responsive: true,
                info: false,
                "language": {
                    "emptyTable": "No certificates to display"
                },
                "createdRow": function(row, data, dataIndex) {
                    if (data.trainingStatus.name === "Completed") {
                        $(row).addClass("mp-cert-completed");
                    }

                    if (data.trainingStatus.name === "Pending") {
                        $(row).addClass("mp-cert-pending");
                    }

                    if (data.trainingStatus.name === "Failed") {
                        $(row).addClass("mp-cert-failed");
                    }
                }
            });

            $("#newDocumentForm").on("submit",
                function(e) {

                    e.preventDefault();

                    var form = $("#newDocumentForm");
                    var data = form.serialize();

                    $.ajax({
                        url: "/api/staff/documents/add",
                        data: data,
                        method: "POST",
                        success: function(result) {
                            $("#NewDocumentModal").modal('hide');
                            toastr.success(result);
                            $("#documents").DataTable().ajax.reload();
                        },
                        error: function(result) {
                            toastr.error(result.responseJSON);
                            form.reset();
                        }
                    });
                });

            $("#newCertForm").on("submit",
                function(e) {

                    e.preventDefault();

                    var form = $("#newCertForm");
                    var data = form.serialize();

                    $.ajax({
                        url: "/api/staff/certificates/create",
                        data: data,
                        method: "POST",
                        success: function(result) {
                            $("#NewCertModal").modal('hide');
                            toastr.success(result);
                            $("#certs").DataTable().ajax.reload();
                        },
                        error: function(result) {
                            toastr.error(result.responseJSON);
                            form.reset();
                        }
                    });
                });

            $("#documents").on("click",
                ".js-delete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to delete this document?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/staff/documents/remove/" + button.attr("data-document-id"),
                                    method: "DELETE",
                                    success: function(ajaxResult) {
                                        $("#documents").DataTable().ajax.reload();
                                        toastr.success(ajaxResult);
                                    },
                                    error: function(ajaxResult) {
                                        toastr.error(ajaxResult.responseJSON);
                                    }
                                });
                            }
                        });
                });
        });

        //Edit Details Not Yet Available
        $("#EditDetailsButton").on("click",
            function() {
                toastr.warning("This feature is not yet available");
            });


    </script>

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/staff")
}