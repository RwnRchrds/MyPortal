@model MyPortal.ViewModels.StaffDetailsViewModel
@{
    ViewBag.Title = "Staff Details";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}

<h2>@Model.Staff.Title @Model.Staff.FirstName.Substring(0, 1) @Model.Staff.LastName</h2>
<hr />
<!-- MyDetails Panel -->
<div class="container" id="Details">
    <div style="float: left;">
        @if (User.IsInRole("SeniorStaff"))
        {
            <button type="button" class="btn btn-warning" id="EditDetailsButton" data-toggle="modal" data-target="#EditDetailsForm">
                <span class="glyphicon glyphicon-list" aria-hidden="true"></span> Edit Details
            </button>
        }
        <div class="panel panel-primary" style="margin-top: 8px; max-width: 300px;">
            <div class="panel-heading">MyDetails</div>
            <div class="panel-body">
                <table class="table-condensed">
                    <tr>
                        <td>
                            <b>Title</b>
                        </td>
                        <td>@Model.Staff.Title</td>
                    </tr>
                    <tr>
                        <td>
                            <b>First Name</b>
                        </td>
                        <td>@Model.Staff.FirstName</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Last Name</b>
                        </td>
                        <td>@Model.Staff.LastName</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Staff Code</b>
                        </td>
                        <td>@Model.Staff.Id</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="container">
    <div>
        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#CertModal">
            <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> New Certificate
        </button>
        <div class="panel panel-primary" style="margin-top: 8px; max-width: 1000px;">
            <div class="panel-heading">MyTraining</div>
            @if (!Model.TrainingCertificates.Any())
            {
                <text>
                    <div class="panel-body">No training certificates to display.</div></text>
            }
            else
            {
                <table class="table table-bordered" id="certs">
                    <thead>
                        <tr style="background-color: #18bc9c;">
                            <th style="color: whitesmoke;">Course</th>
                            <th style="color: whitesmoke;">Description</th>
                            <th style="color: whitesmoke;">Status</th>
                            <th style="color: whitesmoke; min-width: 70px;">Edit</th>
                        </tr>
                    </thead>
                    @foreach (var certificate in Model.TrainingCertificates)
                    {
                        <tr>
                            <td>@certificate.TrainingCourse.Code</td>
                            <td>@certificate.TrainingCourse.Description</td>
                            <td>@certificate.TrainingStatus.Name</td>
                            <td>
                                <button type="button" class="btn btn-warning btn-xs">
                                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                                </button>
                                <button data-staff-id="@certificate.Staff" data-course-id="@certificate.Course" type="button" class="btn btn-danger btn-xs js-delete">
                                    <span class="glyphicon glyphicon-ban-circle" aria-hidden="true"></span>
                                </button>
                            </td>
                        </tr>
                    }
                </table>
            }
        </div>
    </div>
</div>

<!-- MyDocuments Panel -->
<div class="container">
    <div>
        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#NewDocumentModal">
            <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> Add Document
        </button>
        <div class="panel panel-primary" style="margin-top: 8px; width: 1000px;" id="DocumentsPanel">
            <div class="panel-heading">MyDocuments</div>
            <table class="table table-bordered" id="documents" data-staff-id="@Model.Staff.Id">
                <thead>
                    <tr style="background-color: #18bc9c;">
                        <th style="color: whitesmoke;">Description</th>
                        <th style="color: whitesmoke;">Date</th>
                        <th style="color: whitesmoke;">Actions</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<!-- New Certificate Form -->
<div id="CertModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">New Certificate - @Model.Staff.LastName, @Model.Staff.FirstName</h4>
            </div>
            @using (Html.BeginForm("CreateCertificate", "Staff"))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(l => l.TrainingCertificate.Course)
                        @Html.DropDownListFor(l => l.TrainingCertificate.Course, new SelectList(Model.TrainingCourses, "Id", "Description"), "Select Course", new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(l => l.TrainingCertificate.Status)
                        @Html.DropDownListFor(l => l.TrainingCertificate.Status, new SelectList(Model.TrainingStatuses, "Id", "Name"), "Select Status", new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(l => l.TrainingCertificate.Staff, new { Value = Model.Staff.Id })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }

        </div>
    </div>
</div>

<div id="NewDocumentModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add Document - @Model.Staff.LastName, @Model.Staff.FirstName</h4>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = "" }, new { id = "newDocumentForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(x => x.Upload.Document.Description)
                        @Html.TextBoxFor(x => x.Upload.Document.Description, new { @class = "form-control", Name = "Document.Description" })
                        @Html.ValidationMessageFor(x => x.Upload.Document.Description)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Upload.Document.Url)
                        @Html.TextBoxFor(x => x.Upload.Document.Url, new { @class = "form-control", Name = "Document.Url" })
                        @Html.ValidationMessageFor(x => x.Upload.Document.Url)
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(x => x.Upload.StaffId, new { @class = "form-control", Value = Model.Staff.Id, Name = "StaffId" })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts
{
    <script>
        //When Page Has Loaded, Prepare Scripts
        $(document).ready(function () {
            //Clear Modal When Closed
            $('#CertModal').on('hidden.bs.modal',
                function () {
                    $(this).find('form').trigger('reset');
                });

            //Delete Log When Button Clicked
            $("#certs").on("click",
                ".js-delete",
                function () {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to delete this certificate?",
                        function (result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/certificates/certificate/" +
                                    button.attr("data-staff-id") +
                                    "/" +
                                    button.attr("data-course-id"),
                                    method: "DELETE",
                                    success: function () {
                                        location.reload();
                                    }
                                });
                            }
                        });
                });

            $("#documents").DataTable({
                ajax: {
                    url: "/api/staff/documents/fetch/" + $("#documents").attr("data-staff-id"),
                    dataSrc: "",
                    method: "GET"
                },
                columns: [
                    {
                        data: "document1.description",
                        render: function(data, type, document) {
                            return "<a href='" +
                                document.document1.url +
                                "' target='_blank'>" +
                                document.document1.description +
                                "</a>";
                        }

                    },
                    {
                        data: "document1.date",
                        render: function(data) {
                            var date = new Date(data);
                            return date.toLocaleDateString();
                        }
                    },
                    {
                        data: "id",
                        render: function(data) {
                            return "<button type='button' class='btn btn-xs btn-warning js-edit' data-document-id=" +
                                data +
                                "><span class='glyphicon glyphicon-pencil' aria-hidden='true'></span></button> " +
                                "<button type='button' class='btn btn-xs btn-danger js-delete' data-document-id=" +
                                data +
                                "><span class='glyphicon glyphicon-ban-circle' aria-hidden='true'></span></button>";
                        }
                    }
                ],
                paging: false,
                ordering: false,
                searching: false,
                info: false,
                "language": {
                    "emptyTable": "No documents to display"
                }
            });

            $("#newDocumentForm").on("submit",
                function(e) {

                    e.preventDefault();

                    var form = $("#newDocumentForm");
                    var data = form.serialize();

                    $.ajax({
                        url: "/api/staff/documents/add",
                        data: data,
                        method: "POST",
                        success: function(result) {
                            $("#NewDocumentModal").modal('hide');
                            toastr.success(result);
                            $("#documents").DataTable().ajax.reload();
                        },
                        error: function(result) {
                            toastr.error(result.responseJSON);
                            form.reset();
                        }
                    });
                });

            $("#documents").on("click",
                ".js-delete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to delete this document?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/staff/documents/remove/" + button.attr("data-document-id"),
                                    method: "DELETE",
                                    success: function(ajaxResult) {
                                        $("#documents").DataTable().ajax.reload();
                                        toastr.success(ajaxResult);
                                    },
                                    error: function(ajaxResult) {
                                        toastr.error(ajaxResult.responseJSON);
                                    }
                                });
                            }
                        });
                });
        });

        //Edit Details Not Yet Available
        $("#EditDetailsButton").on("click",
            function () {
                toastr.warning("This feature is not yet available");
            });

        
    </script>

    @Scripts.Render("~/bundles/jqueryval");
    @Scripts.Render("~/bundles/staff")
}