@using MyPortal.Processes
@using Syncfusion.EJ2.Grids
@model MyPortal.ViewModels.StaffHomeViewModel
@{
    ViewBag.Title = "Home: " + Model.CurrentUser.Person.Title + " " + Model.CurrentUser.Person.FirstName.Substring(0, 1) + " " + Model.CurrentUser.Person.LastName;
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}

<div class="container float-left">
    <h2 class="mp-page-title">@Model.CurrentUser.Person.Title @Model.CurrentUser.Person.FirstName.Substring(0, 1) @Model.CurrentUser.Person.LastName</h2>
    <hr />
</div>

<div class="container float-left">
    <button type="button" class="btn btn-primary mp-btn-top" data-toggle="modal" data-target="#ChangeAcademicYearModal">

        Academic Year

    </button>
</div>

<!-- MyDetails Panel -->
<div class="container float-left mp-shrink-width" id="details">
    <div>

        <div class="card border-primary mp-card">
            <div class="card-header bg-primary">MyDetails</div>
            <div class="card-body">
                <table class="table-condensed mp-table-condensed">
                    <tr>
                        <td>
                            <b>Title</b>
                        </td>
                        <td>@Model.CurrentUser.Person.Title</td>
                    </tr>
                    <tr>
                        <td>
                            <b>First Name</b>
                        </td>
                        <td>@Model.CurrentUser.Person.FirstName</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Last Name</b>
                        </td>
                        <td>@Model.CurrentUser.Person.LastName</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Staff Code</b>
                        </td>
                        <td>@Model.CurrentUser.Code</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="container float-left mp-margin-top">
    <hr />
    <h4 class="mp-bold">Training</h4>
    @Html.EJS().Grid("Training").DataSource(dataManager =>
    {
        dataManager.Url("/api/personnel/certificates/get/byStaff/dataGrid/" + Model.CurrentUser.Id).CrossDomain(false).Adaptor("UrlAdaptor");
    }).Columns(col =>
    {
        col.Field("CourseCode").HeaderText("Code").Template("#trainingCodeTemplate").Width("200").Add();
        col.Field("CourseDescription").HeaderText("Description").Template("#trainingDescriptionTemplate").Width("300").Add();
        col.Field("Status").HeaderText("Status").Template("#trainingStatusTemplate").Width("250").Add();
    }).AllowPaging().PageSettings(p => p.PageSize(5)).RowDataBound("trainingRowFunction").EnableHover(false).Render()
</div>

<!--#region MyObservations Panel-->
<div class="container float-left mp-margin-top">
    <hr />
    <h4 class="mp-bold">Observations</h4>
    @Html.EJS().Grid("Observations").DataSource(dataManager =>
    {
        dataManager.Url("/api/personnel/observations/get/byStaff/dataGrid/" + Model.CurrentUser.Id).CrossDomain(false).Adaptor("UrlAdaptor");
    }).Columns(col =>
    {
        col.Field("Date").HeaderText("Date").Template("#observationsDateTemplate").Width("250").Add();
        col.Field("ObserverName").HeaderText("Observed By").Template("#observationsObserverTemplate").Width("300").Add();
        col.Field("Outcome").HeaderText("Outcome").Template("#observationsOutcomeTemplate").Width("300").Add();
    }).AllowPaging().PageSettings(p => p.PageSize(5)).RowDataBound("observationsRowFunction").EnableHover(false).Render()
</div>
<!--#endregion-->
<!-- MyDocuments Panel -->
<div class="container float-left mp-margin-top">
    <hr />
    <h4 class="mp-bold">Documents</h4>
    @Html.EJS().Grid("Documents").DataSource(dataManager =>
    {
        dataManager.Url("/api/documents/personal/get/dataGrid/" + Model.CurrentUser.Person.Id).CrossDomain(false).Adaptor("UrlAdaptor");
    }).Columns(col =>
    {
        col.Field("Description").HeaderText("Description").Template("#documentsDescriptionTemplate").Width("300").Add();
        col.Field("Date").HeaderText("Date").Template("#documentsDateTemplate").Width("250").Add();
    }).AllowPaging().PageSettings(p => p.PageSize(5)).EnableHover(false).Render()
</div>

<div id="ChangeAcademicYearModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Select Academic Year</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = "/api/curriculum/academicYears/select", HttpMethod = "POST", OnSuccess = "selectYearSuccess", OnFailure = "selectYearFailure" }, new { id = "newLessonPlanForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Academic Year")
                        @Html.DropDownList("Id", new SelectList(Model.CurriculumAcademicYears, "Id", "Name", Model.SelectedAcademicYearId), new { @class = "form-control", id = "selectedYear" })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts
{
    <script>
        $(document).ready(function () {

        });

        function selectYearSuccess(result) {
            $("#ChangeAcademicYearModal").modal('hide');
            toastr.success(result);
            location.reload();
        }

        function selectYearFailure(result) {
            $("#ChangeAcademicYearModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function observationsRowFunction(args) {
            if (args.data['Outcome'] === "Outstanding") {
                args.row.classList.add("mp-observation-outstanding");
            }
            else if (args.data['Outcome'] === "Good") {
                args.row.classList.add("mp-observation-good");
            }
            else if (args.data['Outcome'] === "Satisfactory") {
                args.row.classList.add("mp-observation-satisfactory");
            }
            else if (args.data['Outcome'] === "Inadequate") {
                args.row.classList.add("mp-observation-inadequate");
            }
        }

        function trainingRowFunction(args) {
            if (args.data['Status'] === "Completed") {
                args.row.classList.add("mp-cert-completed");
            }
            else if (args.data['Status'] === "Pending") {
                args.row.classList.add("mp-cert-pending");
            }
            else if (args.data['Status'] === "Failed") {
                args.row.classList.add("mp-cert-failed");
            }
        }
    </script>

    <script type="text/x-jsrender" id="documentsDescriptionTemplate">
        <div>
            ${Description}
        </div>
    </script>

    <script type="text/x-jsrender" id="documentsDateTemplate">
        <div>
            ${formatDate(Date.toString())}
        </div>
    </script>

    <script type="text/x-jsrender" id="observationsDateTemplate">
        <div>
            ${formatDate(Date.toString())}
        </div>
    </script>

    <script type="text/x-jsrender" id="observationsObserverTemplate">
        <div>
            ${ObserverName}
        </div>
    </script>

    <script type="text/x-jsrender" id="observationsOutcomeTemplate">
        <div>
            ${Outcome}
        </div>
    </script>

    <script type="text/x-jsrender" id="trainingCodeTemplate">
        <div>
            ${CourseCode}
        </div>
    </script>

    <script type="text/x-jsrender" id="trainingDescriptionTemplate">
        <div>
            ${CourseDescription}
        </div>
    </script>

    <script type="text/x-jsrender" id="trainingStatusTemplate">
        <div>
            ${Status}
        </div>
    </script>
}