@using MyPortal.Processes
@model MyPortal.ViewModels.DocumentsViewModel
@{
    ViewBag.Title = "Documents";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}

<div class="container" id="title">

    <h2 class="mp-page-title">Controlled Documents</h2>
    <hr/>

</div>

<div class="container">
    @if (User.IsInRole("SeniorStaff"))
    {
        <button type="button" class="btn btn-primary mp-btn-top-auto" data-toggle="modal" data-target="#NewDocumentModal">New Document</button>
        <hr/>
    }

</div>

<div class="container">
   @Html.EJS().Grid("Documents").DataSource(d =>
   {
       if (User.HasPermission("EditDocuments"))
       {
           d.Url("/api/documents/general/get/dataGrid/all").CrossDomain(false).Adaptor("UrlAdaptor");
       }

       else
       {
           d.Url("/api/documents/general/get/dataGrid/approved").CrossDomain(false).Adaptor("UrlAdaptor");
       }
   }).Columns(c =>
   {
       c.Field("Description").HeaderText("Description").Template("#documentsDescriptionTemplate").Width("200").Add();
       c.Field("Date").HeaderText("Date").Template("#documentsDateTemplate").Width("200").Add();
       if (User.HasPermission("EditDocuments"))
       {
           c.Field("Approved").Template("#documentsApprovedTemplate").Width("100").Add();
           c.HeaderText("Actions").Template("#documentsActionsTemplate").Width("170").Add();
       }
   }).AllowPaging().PageSettings(p => p.PageSize(12)).SearchSettings(s => { s.Operator("contains").IgnoreCase(true); }).Toolbar(new List<string> {"Search"}).Render()
</div>


@if (User.IsInRole("SeniorStaff"))
{
    <div id="NewDocumentModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!--content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">New Controlled Document</h4>
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
                </div>
                @using (Ajax.BeginForm(null, null, new AjaxOptions {Url = "/api/documents/add", HttpMethod = "POST", OnSuccess = "newDocumentSuccess", OnFailure = "newDocumentFailure"}, new {id = "newDocumentForm"}))
                {
                    <div class="modal-body">
                        <div class="form-group">
                            @Html.Label("Description")
                            @Html.TextBoxFor(x => x.Document.Description, new {@class = "form-control", Name = "Description"})
                            @Html.ValidationMessageFor(x => x.Document.Description)
                        </div>
                        <div class="form-group">
                            @Html.Label("URL")
                            @Html.TextBoxFor(x => x.Document.Url, new {@class = "form-control", Name = "Url"})
                            @Html.ValidationMessageFor(x => x.Document.Url)
                        </div>
                        <div class="form-group">
                            @Html.Label("Approved")
                            @Html.CheckBoxFor(x => x.Document.Approved, new {Name = "Approved"})
                            @Html.ValidationMessageFor(x => x.Document.Approved)
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div id="EditDocumentModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!--content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Edit Controlled Document</h4>
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
                </div>
                @using (Ajax.BeginForm(null, null, new AjaxOptions {Url = "/api/documents/edit", HttpMethod = "POST", OnSuccess = "editDocumentSuccess", OnFailure = "editDocumentFailure"}, new {id = "editDocumentForm"}))
                {
                    <div class="modal-body">
                        <div class="form-group">
                            @Html.Label("Description")
                            @Html.TextBoxFor(x => x.Document.Description, new {@class = "form-control", Name = "Description", id = "EditDocumentDescriptionControl"})
                            @Html.ValidationMessageFor(x => x.Document.Description)
                        </div>
                        <div class="form-group">
                            @Html.Label("URL")
                            @Html.TextBoxFor(x => x.Document.Url, new {@class = "form-control", Name = "Url", id = "EditDocumentUrlControl"})
                            @Html.ValidationMessageFor(x => x.Document.Url)
                        </div>
                        <div class="form-group">
                            @Html.Label("Approved")
                            @Html.CheckBoxFor(x => x.Document.Approved, new {Name = "Approved", id = "EditDocumentApprovedControl"})
                            @Html.ValidationMessageFor(x => x.Document.Approved)
                        </div>
                        <div class="form-group">
                            @Html.HiddenFor(x => x.Document.Id, new {Name = "Id", id = "EditDocumentIdControl"})
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}


@section scripts
{
    <script>
        $(document).ready(function() {
            $('.modal').on('hidden.bs.modal',
                function() {
                    $(this).find('form').trigger('reset');
                });

            $("#Documents").on("click",
                ".js-edit",
                function() {
                    var button = $(this);
                    var docId = button.attr("data-document-id");
                    $.ajax({
                        url: "/api/documents/document/" + docId,
                        method: "GET",
                        success: function(result) {
                            $("#EditDocumentDescriptionControl").val(result["description"]);
                            $("#EditDocumentUrlControl").val(result["url"]);
                            $("#EditDocumentIdControl").val(result["id"]);
                            $("#EditDocumentApprovedControl").attr("checked", result["approved"]);
                        },
                        error: function() {
                            toastr.error("Failed to load document data");
                        }
                    });
                    $("#EditDocumentModal").modal('toggle');
                });

            $("#Documents").on("click",
                ".js-delete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to delete this document?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/documents/remove/" + button.attr("data-document-id"),
                                    method: "DELETE",
                                    success: function(ajaxResult) {
                                        refreshTable("Documents");
                                        toastr.success(ajaxResult);
                                    },
                                    error: function(ajaxResult) {
                                        toastr.error(ajaxResult.responseJSON);
                                    }
                                });
                            }
                        });
                });
        });

        function newDocumentSuccess(result) {
            $("#NewDocumentModal").modal('hide');
            refreshTable("Documents");
            toastr.success(result);
        }

        function newDocumentFailure(result) {
            $("#NewDocumentModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function editDocumentSuccess(result) {
            $("#EditDocumentModal").modal('hide');
            refreshTable("Documents");            
            toastr.success(result);
        }

        function editDocumentFailure(result) {
            $("#EditDocumentModal").modal('hide');
            toastr.error(result.responseJSON);
        }
        
        function renderApproved(data) {
            if (data) {
                return "Approved";
            } else {
                return "Pending Approval";
            }
        }
    </script>

    <script type="text/x-jsrender" id="documentsDescriptionTemplate">
        <div>
            <a href="${Url}" class="mp-bold">${Description}</a>
        </div>
    </script>

    <script type="text/x-jsrender" id="documentsApprovedTemplate">
            <div>
                ${renderApproved(Approved)}
            </div>
        </script>

    <script type="text/x-jsrender" id="documentsDateTemplate">
            <div>
                ${formatDate(Date.toString())}
            </div>
        </script>

    <script type="text/x-jsrender" id="documentsActionsTemplate">
                <div>
                    <button type='button' class='btn btn-xs btn-warning mp-btn-action js-edit' data-document-id="${Id}">
                        <i class="far fa-edit"></i>
                    </button>
                    
                    <button type='button' class='btn btn-xs btn-danger mp-btn-action js-delete' data-document-id="${Id}">
                        <i class="far fa-trash-alt"></i>
                    </button>
                </div>
            </script>

    @Scripts.Render("~/bundles/jqueryval")

}