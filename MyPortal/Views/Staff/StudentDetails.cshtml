@using Microsoft.AspNet.Identity
@model MyPortal.ViewModels.StudentDetailsViewModel
@{
    ViewBag.Title = "Student Details";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>

<h2>@Model.Student.LastName, @Model.Student.FirstName</h2>

<hr/>

<body>
<!-- MyDetails Panel -->
<div class="container" id="Details">
    <div style="float: left;">
        @if (User.IsInRole("SeniorStaff"))
        {
            <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#EditDetailsForm">
                <span class="glyphicon glyphicon-list" aria-hidden="true"></span> Edit Details
            </button>
        }
        <button type="button" class="btn btn-warning" id="ViewResultsButton" data-student-id="@Model.Student.Id">
            <span class="glyphicon glyphicon-stats" aria-hidden="true"></span> View Results
        </button>
        <div class="panel panel-primary" style="margin-top: 8px; max-width: 300px;">
            <div class="panel-heading">MyDetails</div>
            <div class="panel-body">
                <table class="table-condensed">
                    <tr>
                        <td>
                            <b>First Name</b>
                        </td>
                        <td>@Model.Student.FirstName</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Last Name</b>
                        </td>
                        <td>@Model.Student.LastName</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Year Group</b>
                        </td>
                        <td>@Model.Student.YearGroup1.Name</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Reg Group</b>
                        </td>
                        <td>@Model.Student.RegGroup1.Name</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Reg Tutor</b>
                        </td>
                        <td>@Model.Student.RegGroup1.Staff.Title @Model.Student.RegGroup1.Staff.FirstName.Substring(0, 1) @Model.Student.RegGroup1.Staff.LastName</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Head of Year</b>
                        </td>
                        <td>@Model.Student.YearGroup1.Staff.Title @Model.Student.YearGroup1.Staff.FirstName.Substring(0, 1) @Model.Student.YearGroup1.Staff.LastName</td>
                    </tr>
                </table>
                <hr/>
                <h4><b>Balance:</b> £@Model.Student.AccountBalance</h4>
            </div>
        </div>
    </div>

    <!-- MyResults Panel -->
    <div style="float: left; margin-left: 20px;" id="Results">
        <div class="panel panel-primary" style="margin-top: 8px; max-width: 300px;">
            <div class="panel-heading">MyResults</div>
            @if (!Model.Results.Any())
            {
                {
                    <text>
                        <div class="panel-body">No results to display.</div></text>
                }
            }
            else
            {
                <table class="table table-condensed table-bordered">
                    <thead>
                    <tr style="background-color: #18bc9c">
                        <th style="color: whitesmoke">Subject</th>
                        <th style="color: whitesmoke">Result</th>
                    </tr>
                    </thead>
                    @foreach (var result in Model.Results)
                    {
                        <tr>
                            <td>@result.Subject1.Name</td>
                            <td>@result.Value</td>
                        </tr>
                    }
                </table>
            }
        </div>
    </div>

    <!-- MyResults Chart Panel -->
    <div style="float: left; margin-left: 20px;" id="Chart">
        <div class="panel panel-primary" style="margin-top: 8px; max-width: 300px;">
            <div class="panel-heading">MyResults - Chart</div>
            <div class="panel-body">
                @if (!Model.Results.Any())
                {
                    <text>No data to display.</text>
                }
                else
                {
                    <canvas id="resultsChart" style="height: 300px; width: 300px;"></canvas>

                    <script>
                        var ctx = document.getElementById('resultsChart').getContext('2d');
                        var chart = new Chart(ctx,
                            {
                                // The type of chart we want to create
                                type: 'bar',
                                fillOpacity: .3,
                                // The data for our dataset
                                data: {
                                    @if (Model.IsUpperSchool)
                                    {
                                        <text>labels: ["A*", "A", "B", "C", "D", "E", "F", "G", "U"],</text>
                                    }
                                    else
                                    {
                                        <text>labels: ["E", "8", "7", "6", "5", "4", "3", "2", "1"],</text>
                                    }
                                    datasets: [
                                        {
                                            label: "",
                                            backgroundColor: [
                                                "rgba(255,0,0,0.5)", //L1
                                                "rgba(255,127,0,0.5)", //L2
                                                "rgba(255,255,0,0.5)", //L3
                                                "rgba(0,255,0,0.5)", //L4
                                                "rgba(0,0,255,0.5)", //L5
                                                "rgba(75,0,130,0.5)", //L6
                                                "rgba(148,0,211,0.5)", //L7
                                                "rgba(228,35,157,0.5)", //L8
                                                "rgba(0,0,0,0.5)"
                                            ], //L9
                                            borderColor: [
                                                "rgba(255,0,0,0.5)", //L1
                                                "rgba(255,127,0,0.5)", //L2
                                                "rgba(255,255,0,0.5)", //L3
                                                "rgba(0,255,0,0.5)", //L4
                                                "rgba(0,0,255,0.5)", //L5
                                                "rgba(75,0,130,0.5)", //L6
                                                "rgba(148,0,211,0.5)", //L7
                                                "rgba(228,35,157,0.5)", //L8
                                                "rgba(0,0,0,0.5)"
                                            ], //L9
                                            data: [
                                                @Model.ChartData.L1,
                                                @Model.ChartData.L2,
                                                @Model.ChartData.L3,
                                                @Model.ChartData.L4,
                                                @Model.ChartData.L5,
                                                @Model.ChartData.L6,
                                                @Model.ChartData.L7,
                                                @Model.ChartData.L8,
                                                @Model.ChartData.L9
                                            ]
                                        }
                                    ]
                                },

                                // Configuration options go here
                                options: {
                                    legend: {
                                        display: false
                                    },
                                    scales: {
                                        yAxes: [
                                            {
                                                ticks: {
                                                    beginAtZero: true
                                                }
                                            }
                                        ]
                                    }
                                }
                            });
                    </script>
                }
            </div>
        </div>
    </div>
</div>

<!-- MyLogs Panel -->
<div class="container">
    <div>
        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#NewLogModal">
            <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> New Log
        </button>
        <div class="panel panel-primary" style="margin-top: 8px; max-width: 1000px;" id="LogsPanel">
            <div class="panel-heading">MyLogs</div>
            <table class="table table-bordered" id="logs" data-student-id="@Model.Student.Id" style="width: 100%">
                <thead>
                <tr style="background-color: #18bc9c;">
                    <th style="color: whitesmoke;">Date</th>
                    <th style="color: whitesmoke;">Author</th>
                    <th style="color: whitesmoke;">Type</th>
                    <th style="color: whitesmoke;">Message</th>
                    <th style="color: whitesmoke; min-width: 70px;">Actions</th>
                </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<!-- New Logs Form -->
<div id="NewLogModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">New Log - @Model.Student.LastName, @Model.Student.FirstName</h4>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions {Url = ""}, new {id = "NewLogForm"}))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(l => l.Log.Type)
                        @Html.DropDownListFor(l => l.Log.Type, new SelectList(Model.LogTypes, "Id", "Name"), "Select Log Type", new {@class = "form-control", Name = "Type"})
                        @Html.ValidationMessageFor(l => l.Log.Type)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(l => l.Log.Message)
                        @Html.TextAreaFor(l => l.Log.Message, new {@class = "form-control", style = "max-width:500px", Name = "Message"})
                        @Html.ValidationMessageFor(l => l.Log.Message)
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(l => l.Log.Student, new {Value = Model.Student.Id, Name = "Student"})
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(l => l.Log.Date, new {Value = DateTime.Now, Name = "Date"})
                        @Html.HiddenFor(l => l.Log.Author, new {Value = User.Identity.GetUserId(), Name = "Author"})
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }

        </div>
    </div>
</div>

<!-- Edit Logs Form -->
<div id="EditLogModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">New Log - @Model.Student.LastName, @Model.Student.FirstName</h4>
            </div>

            @using (Ajax.BeginForm(null, null, new AjaxOptions {Url = ""}, new {id = "EditLogForm"}))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(l => l.Log.Type)
                        @Html.DropDownListFor(l => l.Log.Type, new SelectList(Model.LogTypes, "Id", "Name"), "Select Log Type", new {@class = "form-control", id = "EditLogTypeControl", Name = "Type"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(l => l.Log.Message)
                        @Html.TextAreaFor(l => l.Log.Message, new {@class = "form-control", style = "max-width:500px;", id = "EditLogMessageControl", Name = "Message"})
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(l => l.Log.Student, new {Value = Model.Student.Id, Name = "Student"})
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(l => l.Log.Id, new {id = "EditLogIdControl", Name = "Id"})
                        @Html.HiddenFor(l => l.Log.Date, new {Value = DateTime.Now, Name = "Date"})
                        @Html.HiddenFor(l => l.Log.Author, new {Value = User.Identity.GetUserId(), Name = "Author"})
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" id="EditLogSave" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }

        </div>
    </div>
</div>

<!-- Edit Details Form -->
<div id="EditDetailsForm" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Edit Details - @Model.Student.LastName, @Model.Student.FirstName</h4>
            </div>
            @using (Html.BeginForm("SaveStudent", "Staff"))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(s => s.Student.FirstName)
                        @Html.TextBoxFor(s => s.Student.FirstName, new {@class = "form-control"})
                        @Html.ValidationMessageFor(s => s.Student.FirstName)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(s => s.Student.LastName)
                        @Html.TextBoxFor(s => s.Student.LastName, new {@class = "form-control"})
                        @Html.ValidationMessageFor(s => s.Student.LastName)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(s => s.Student.YearGroup)
                        @Html.DropDownListFor(s => s.Student.YearGroup, new SelectList(Model.YearGroups, "Id", "Name"), new {@class = "form-control", id = "yearGroupList"})
                        @Html.ValidationMessageFor(s => s.Student.YearGroup)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(s => s.Student.RegGroup)
                        @Html.DropDownListFor(s => s.Student.RegGroup, new SelectList(Model.RegGroups, "Id", "Name"), "Select Reg Group", new {@class = "form-control", id = "regGroupList"})
                        @Html.ValidationMessageFor(s => s.Student.RegGroup)
                    </div>
                    @Html.HiddenFor(s => s.Student.Id)
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }

        </div>
    </div>
</div>
</body>

@section scripts
{
    <script>
        //When Page Has Loaded, Prepare Scripts
        $(document).ready(function() {

            //---SCRIPT DEFINITIONS---

            //Delete Log When Button Clicked
            $("#logs").on("click",
                ".js-delete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to delete this log?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/logs/log/" + button.attr("data-log-id"),
                                    method: "DELETE",
                                    success: function(result) {
                                        $("#logs").DataTable().ajax.reload();
                                        toastr.success(result);
                                    },
                                    error: function(result) {
                                        toastr.error(result.responseJSON);
                                    }
                                });
                            }
                        });
                });

            //Load Logs Table
            function loadLogTable() {
                var logsTable = $("#logs");
                $("#logs").DataTable({
                    ajax: {
                        url: "/api/logs/" + logsTable.attr("data-student-id"),
                        dataSrc: "",
                        method: "GET"
                    },
                    columns: [
                        {
                            data: "date",
                            render: function(data) {
                                var date = new Date(data);
                                return date.toLocaleDateString();
                            }

                        },
                        {
                            data: "staff.lastName",
                            render: function(data, type, log) {
                                return log.staff.title +
                                    " " +
                                    log.staff.firstName.substring(0, 1) +
                                    " " +
                                    log.staff.lastName;
                            }
                        },
                        {
                            data: "logType.name"
                        },
                        {
                            data: "message"
                        },
                        {
                            data: "id",
                            render: function(data) {
                                return "<button type='button' class='btn btn-xs btn-warning js-edit' data-log-id=" +
                                    data +
                                    "><span class='glyphicon glyphicon-pencil' aria-hidden='true'></span></button> " +
                                    "<button type='button' class='btn btn-xs btn-danger js-delete' data-log-id=" +
                                    data +
                                    "><span class='glyphicon glyphicon-ban-circle' aria-hidden='true'></span></button>";
                            }
                        }
                    ],
                    paging: false,
                    ordering: false,
                    searching: false,
                    info: false,
                    "createdRow": function(row, data, dataIndex) {
                        if (data.logType.name === "Academic Support") {
                            $(row).addClass("logAcademicSupport");
                        }

                        if (data.logType.name === "Behaviour Log") {
                            $(row).addClass("logBehaviour");
                        }

                        if (data.logType.name === "EOY Report") {
                            $(row).addClass("logEoy");
                        }

                        if (data.logType.name === "Praise") {
                            $(row).addClass("logPraise");
                        }

                        if (data.logType.name === "SEN Note") {
                            $(row).addClass("logSen");
                        }

                        if (data.logType.name === "Student Feed") {
                            $(row).addClass("logStudent");
                        }

                        if (data.logType.name === "Tutor Note") {
                            $(row).addClass("logTutor");
                        }


                        if (data.logType.name === "Medical Event") {
                            $(row).addClass("logMedical");
                        }
                    },
                    "language": {
                        "emptyTable": "No logs to display"
                    }
                });
            }

            //Edit Log Form Submit
            $("#EditLogForm").on("submit",
                function(e) {

                    e.preventDefault();

                    $.ajax({
                        url: "/api/logs/log/edit",
                        data: $("#EditLogForm").serialize(),
                        method: "POST",
                        success: function(result) {
                            $("#EditLogModal").modal('hide');
                            toastr.success(result);
                            $("#logs").DataTable().ajax.reload();
                        },
                        error: function(result) {
                            toastr.error(result.responseJSON);
                        }

                    });
                });

            //Open Form When Edit Log Button Clicked
            $("#logs").on("click",
                ".js-edit",
                function() {
                    var button = $(this);
                    var logId = button.attr("data-log-id");
                    $.ajax({
                        url: "/api/logs/log/" + logId,
                        method: "GET",
                        success: function(result) {
                            $("#EditLogTypeControl").val(result["type"]);
                            $("#EditLogMessageControl").val(result["message"]);
                            $("#EditLogIdControl").val(result["id"]);
                        },
                        error: function() {
                            toastr.error("Could Not Load Form");
                        }
                    });
                    $("#EditLogModal").modal('toggle');
                });

            //Colour Code Logs
            $(".logentry").each(function() {
                var log = (this);
                var logType = $(this).find(".logtype").html();

                if (logType === "Academic Support") {
                    $(log).addClass("logAcademicSupport");
                }

                if (logType === "Behaviour Log") {
                    $(log).addClass("logBehaviour");
                }

                if (logType === "EOY Report") {
                    $(log).addClass("logEoy");
                }

                if (logType === "Praise") {
                    $(log).addClass("logPraise");
                }

                if (logType === "SEN Note") {
                    $(log).addClass("logSen");
                }

                if (logType === "Student Feed") {
                    $(log).addClass("logStudent");
                }

                if (logType === "Tutor Note") {
                    $(log).addClass("logTutor");
                }
            });

            //Clear Modal When Closed
            $('#NewLogModal').on('hidden.bs.modal',
                function() {
                    $(this).find('form').trigger('reset');
                });

            $('#EditLogModal').on('hidden.bs.modal',
                function() {
                    $(this).find('form').trigger('reset');
                });

            //View Results
            $("#ViewResultsButton").on("click",
                function() {
                    var button = $(this);
                    location.replace("/Staff/Students/" + button.attr("data-student-id") + "/Results");
                });

            //New Log Form Submit
            $("#NewLogForm").on("submit",
                function(e) {

                    e.preventDefault();

                    $.ajax({
                        url: "/api/logs/new",
                        data: $("#NewLogForm").serialize(),
                        method: "POST",
                        success: function(result) {
                            $("#NewLogModal").modal('hide');
                            toastr.success(result);
                            $("#logs").DataTable().ajax.reload();
                        },
                        error: function(result) {
                            toastr.error(result.responseJSON);
                        }
                    });
                });

            //---FUNCTION CALLS---
            loadLogTable();
        });
    </script>

    @Scripts.Render("~/bundles/staff")
    @Scripts.Render("~/bundles/jqueryval")
}