@using System.Globalization
@using Microsoft.AspNet.Identity
@model MyPortal.ViewModels.StudentDetailsViewModel
@{
    ViewBag.Title = "Student Details";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>

<h2>@Model.Student.LastName, @Model.Student.FirstName</h2>

<hr />

<body>
    @if (User.IsInRole("SeniorStaff"))
    {
        <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#EditDetailsForm">
            <span class="glyphicon glyphicon-list" aria-hidden="true"></span> Edit Details
        </button>
    }
    <button type="button" class="btn btn-warning">
        <span class="glyphicon glyphicon-stats" aria-hidden="true"></span> Edit Results
    </button>
    <!-- MyDetails Panel -->
    <div class="container" id="Details">
        <div style="float: left;">
            <div class="panel panel-primary" style="width: 300px; margin-top: 8px;">
                <div class="panel-heading">MyDetails</div>
                <div class="panel-body">
                    <table class="table-condensed">
                        <tr>
                            <td><b>First Name</b></td>
                            <td>@Model.Student.FirstName</td>
                        </tr>
                        <tr>
                            <td><b>Last Name</b></td>
                            <td>@Model.Student.LastName</td>
                        </tr>
                        <tr>
                            <td><b>Year Group</b></td>
                            <td>@Model.Student.YearGroup1.Name</td>
                        </tr>
                        <tr>
                            <td><b>Reg Group</b></td>
                            <td>@Model.Student.RegGroup1.Name</td>
                        </tr>
                        <tr>
                            <td><b>Reg Tutor</b></td>
                            <td>@Model.Student.RegGroup1.Staff.Title @Model.Student.RegGroup1.Staff.FirstName.Substring(0, 1) @Model.Student.RegGroup1.Staff.LastName</td>
                        </tr>
                        <tr>
                            <td><b>Head of Year</b></td>
                            <td>@Model.Student.YearGroup1.Staff.Title @Model.Student.YearGroup1.Staff.FirstName.Substring(0, 1) @Model.Student.YearGroup1.Staff.LastName</td>
                        </tr>
                    </table>
                    <hr />
                    <h4><b>Balance:</b> £@Model.Student.AccountBalance</h4>
                </div>
            </div>
        </div>

        <!-- MyResults Panel -->
        <div style="float: left; margin-left: 20px;" id="Results">
            <div class="panel panel-primary" style="width: 300px; margin-top: 8px;">
                <div class="panel-heading">MyResults</div>
                @if (!Model.Results.Any())
                {
                    {<text><div class="panel-body">No results to display.</div></text>}
            }
            else
            {
                <table class="table table-condensed table-bordered">
                    <thead>
                        <tr style="background-color: #18bc9c">
                            <th style="color: whitesmoke">Subject</th>
                            <th style="color: whitesmoke">Result</th>
                        </tr>
                    </thead>
                    @foreach (var result in Model.Results)
                    {
                        <tr>
                            <td>@result.Subject1.Name</td>
                            <td>@result.Value</td>
                        </tr>
                    }
                </table>
            }
            </div>
        </div>

        <!-- MyResults Chart Panel -->
        <div style="float: left; margin-left: 20px;" id="Chart">
            <div class="panel panel-primary" style="width: 300px; margin-top: 8px;">
                <div class="panel-heading">MyResults - Chart</div>
                <div class="panel-body">
                    @if (!Model.Results.Any())
                    {
                        <text>No data to display.</text>
                    }
                    else
                    {
                        <canvas id="resultsChart" style="width: 300px; height: 300px;"></canvas>

                        <script>
                            var ctx = document.getElementById('resultsChart').getContext('2d');
                            var chart = new Chart(ctx,
                                {
                                    // The type of chart we want to create
                                    type: 'bar',
                                    fillOpacity: .3,
                                    // The data for our dataset
                                    data: {
                                        @if (Model.IsUpperSchool == true)
                                    {
                                        <text>labels: ["A*", "A", "B", "C", "D", "E", "F", "G", "U"],</text>
                                    }
                                    else
                                    {
                                        <text>labels: ["E", "8", "7", "6", "5", "4", "3", "2", "1"],</text>
                                    }
                                        datasets: [
                                            {
                                                label: "",
                                                backgroundColor: [
                                                    "rgba(255,0,0,0.5)", //L1
                                                    "rgba(255,127,0,0.5)", //L2
                                                    "rgba(255,255,0,0.5)", //L3
                                                    "rgba(0,255,0,0.5)", //L4
                                                    "rgba(0,0,255,0.5)", //L5
                                                    "rgba(75,0,130,0.5)", //L6
                                                    "rgba(148,0,211,0.5)", //L7
                                                    "rgba(228,35,157,0.5)", //L8
                                                    "rgba(0,0,0,0.5)"
                                                ], //L9
                                                borderColor: [
                                                    "rgba(255,0,0,0.5)", //L1
                                                    "rgba(255,127,0,0.5)", //L2
                                                    "rgba(255,255,0,0.5)", //L3
                                                    "rgba(0,255,0,0.5)", //L4
                                                    "rgba(0,0,255,0.5)", //L5
                                                    "rgba(75,0,130,0.5)", //L6
                                                    "rgba(148,0,211,0.5)", //L7
                                                    "rgba(228,35,157,0.5)", //L8
                                                    "rgba(0,0,0,0.5)"
                                                ], //L9
                                                data: [
                                                    @Model.ChartData.L1,
                                                    @Model.ChartData.L2,
                                                    @Model.ChartData.L3,
                                                    @Model.ChartData.L4,
                                                    @Model.ChartData.L5,
                                                    @Model.ChartData.L6,
                                                    @Model.ChartData.L7,
                                                    @Model.ChartData.L8,
                                                    @Model.ChartData.L9
                                                ]
                                            }
                                        ]
                                    },

                                    // Configuration options go here
                                    options: {
                                        legend: {
                                            display: false,
                                        },
                                        scales: {
                                            yAxes: [
                                                {
                                                    ticks: {
                                                        beginAtZero: true
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                });
                        </script>

                    }
                </div>
            </div>
        </div>
    </div>

    <!-- MyLogs Panel -->
    <div class="container">
        <div>
            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#LogModal">
                <span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> New Log
            </button>
            <div class="panel panel-primary" style="width: 1000px; margin-top: 8px;" id="Logs">
                <div class="panel-heading">MyLogs</div>
                @if (!Model.Logs.Any())
                {<text><div class="panel-body">No logs to display.</div></text>}
            else
            {
                <table class="table table-bordered" id="logs">
                    <thead>
                        <tr style="background-color: #18bc9c;">
                            <th style="color: whitesmoke;">Date</th>
                            <th style="color: whitesmoke;">Author</th>
                            <th style="color: whitesmoke;">Type</th>
                            <th style="color: whitesmoke;">Message</th>
                            <th style="color: whitesmoke; min-width: 70px;">Edit</th>
                        </tr>
                    </thead>
                    @foreach (var log in Model.Logs)
                    {
                        <tr>
                            <td>@log.Date.ToShortDateString()</td>
                            <td>@log.Staff.Title @log.Staff.FirstName.Substring(0, 1) @log.Staff.LastName</td>
                            <td>@log.LogType.Name</td>
                            <td>@log.Message</td>
                            <td>
                                <button type="button" class="btn btn-warning btn-xs">
                                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                                </button>
                                <button data-log-id="@log.Id" type="button" class="btn btn-danger btn-xs js-delete">
                                    <span class="glyphicon glyphicon-ban-circle" aria-hidden="true"></span>
                                </button>
                            </td>
                        </tr>
                    }
                </table>
            }
            </div>
        </div>
    </div>

    <!-- New Logs Form -->
    <div id="LogModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!--content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">New Log - @Model.Student.LastName, @Model.Student.FirstName</h4>
                </div>
                @using (Html.BeginForm("SaveLog", "Staff"))
                {
                    <div class="modal-body">
                        <div class="form-group">
                            @Html.LabelFor(l => l.Log.Type)
                            @Html.DropDownListFor(l => l.Log.Type, new SelectList(Model.LogTypes, "Id", "Name"), "Select Log Type", new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(l => l.Log.Message)
                            @Html.TextAreaFor(l => l.Log.Message, new { @class = "form-control", @style = "min-width:500px;" })
                        </div>
                        <div class="form-group">
                            @Html.HiddenFor(l => l.Log.Student, new { Value = Model.Student.Id })
                        </div>
                        <div class="form-group">
                            @Html.HiddenFor(l => l.Log.Date, new { Value = DateTime.Now.ToString(CultureInfo.CreateSpecificCulture("en-GB")) })
                            @Html.HiddenFor(l => l.Log.Author, new { Value = User.Identity.GetUserId() })
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>

    <!-- Edit Details Form -->
    <div id="EditDetailsForm" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!--content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Edit Details - @Model.Student.LastName, @Model.Student.FirstName</h4>
                </div>
                @using (Html.BeginForm("SaveStudent", "Staff"))
                {
                    <div class="modal-body">
                        <div class="form-group">
                            @Html.LabelFor(s => s.Student.FirstName)
                            @Html.TextBoxFor(s => s.Student.FirstName, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(s => s.Student.LastName)
                            @Html.TextBoxFor(s => s.Student.LastName, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(s => s.Student.YearGroup)
                            @Html.TextBoxFor(s => s.Student.YearGroup, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(s => s.Student.RegGroup)
                            @Html.TextBoxFor(s => s.Student.RegGroup, new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(s => s.Student.AccountBalance)
                            @Html.TextBoxFor(s => s.Student.AccountBalance, new { @class = "form-control" })
                        </div>
                        @Html.HiddenFor(s => s.Student.Id)
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</body>

@section scripts
{
    <script>
        //When Page Has Loaded, Prepare Scripts
        $(document).ready(function () {

            //Delete Log When Button Clicked
            $("#logs").on("click", ".js-delete", function () {
                var button = $(this);
                bootbox.confirm("Are you sure you wish to delete this log?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/logs/log/" + button.attr("data-log-id"),
                            method: "DELETE",
                            success: function () {
                                location.reload();
                            }
                        });
                    }
                });
            });

            //Clear Modal When Closed
            $('#LogModal').on('hidden.bs.modal', function () {
                $(this).find('form').trigger('reset');
            })
        });
    </script>   

    @Scripts.Render("~/bundles/jqueryval")
}
