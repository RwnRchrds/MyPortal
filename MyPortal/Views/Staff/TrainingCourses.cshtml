@model MyPortal.ViewModels.TrainingCoursesViewModel
@{
    ViewBag.Title = "TrainingCourses";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}

<div class="container float-left">
    <h2 class="mp-page-title">Training Courses</h2>
    <hr/>
</div>

<div class="container float-left">
    @if (User.IsInRole("SeniorStaff"))
    {
        @Html.ActionLink("New Course", "NewCourse", "Staff", null, new {@class = "btn btn-success", style = "margin-bottom: 8px;"})
        <hr/>
    }
</div>

<div class="container float-left">
    <table class="table table-bordered table-hover mp-table" id="courses">
        <thead>
        <tr>
            <th>Code</th>
            <th>Description</th>
            @if (User.IsInRole("SeniorStaff"))
            {
                <th>Actions</th>
            }
        </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

<div id="EditCourseModal" class="modal fade" role="dialog">
    <div class="modal-dialog" role="document">

        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit Training Course</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions {Url = ""}, new {id = "EditCourseForm"}))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(l => l.Course.Code)
                        @Html.TextBoxFor(x => x.Course.Code, new {@class = "form-control", id = "EditCourseCodeControl", Name = "Code"})
                        @Html.ValidationMessageFor(l => l.Course.Code)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(l => l.Course.Description)
                        @Html.TextBoxFor(l => l.Course.Description, new {@class = "form-control", id = "EditCourseDescriptionControl", Name = "Description"})
                        @Html.ValidationMessageFor(l => l.Course.Description)
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(l => l.Course.Id, new {id = "EditCourseIdControl", Name = "Id"})
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }

        </div>
    </div>
</div>


@section scripts
{
    @if (User.IsInRole("SeniorStaff"))
    {
        <script>
            $(document).ready(function() {

                $("#courses").DataTable({
                    ajax: {
                        url: "/api/courses",
                        dataSrc: ""
                    },
                    columns: [
                        {
                            data: "code"
                        },
                        {
                            data: "description"
                        },
                        {
                            data: "id",
                            render: function(data) {
                                return "<button type='button' class='btn btn-xs btn-warning js-edit' data-course-id=" +
                                    data +
                                    "><i class=\"far fa-edit\"></i></button> " +
                                    "<button type='button' class='btn btn-xs btn-danger js-delete' data-course-id=" +
                                    data +
                                    "><i class=\"far fa-trash-alt\"></i></button>";
                            }
                        }
                    ]
                });

                $("#EditCourseForm").on("submit",
                    function(e) {

                        e.preventDefault();

                        $.ajax({
                            url: "/api/courses/edit",
                            data: $("#EditCourseForm").serialize(),
                            method: "POST",
                            success: function(result) {
                                $("#EditCourseModal").modal('hide');
                                toastr.success(result);
                                $("#courses").DataTable().ajax.reload();
                            },
                            error: function(result) {
                                toastr.error(result.responseJSON);
                            }

                        });
                    });

                $('#EditCourseModal').on('hidden.bs.modal',
                    function() {
                        $(this).find('form').trigger('reset');
                    });

                $("#courses").on("click",
                    ".js-edit",
                    function() {
                        var button = $(this);
                        var courseId = button.attr("data-course-id");
                        $.ajax({
                            url: "/api/courses/fetch/" + courseId,
                            method: "GET",
                            success: function(result) {
                                $("#EditCourseCodeControl").val(result["code"]);
                                $("#EditCourseDescriptionControl").val(result["description"]);
                                $("#EditCourseIdControl").val(result["id"]);
                            },
                            error: function() {
                                toastr.error("Failed to load course data");
                            }
                        });
                        $("#EditCourseModal").modal('toggle');
                    });

                $("#courses").on("click",
                    ".js-delete",
                    function() {
                        var button = $(this);
                        bootbox.confirm("Are you sure you wish to delete this course?",
                            function(result) {
                                if (result) {
                                    $.ajax({
                                        url: "/api/courses/remove/" + button.attr("data-course-id"),
                                        method: "DELETE",
                                        success: function(ajaxResult) {
                                            $("#courses").DataTable().ajax.reload();
                                            toastr.success(ajaxResult);
                                        },
                                        error: function(ajaxResult) {
                                            toastr.error(ajaxResult.responseJSON);
                                        }
                                    });
                                }
                            });
                    });

            });
        </script>
    }

    @if (!User.IsInRole("SeniorStaff") && User.IsInRole("Staff"))
    {
        <script>
            $(document).ready(function() {
                $("#courses").DataTable({
                    ajax: {
                        url: "/api/courses",
                        dataSrc: ""
                    },
                    columns: [
                        {
                            data: "code"
                        },
                        {
                            data: "description"
                        }
                    ]
                });
            });
        </script>
    }


    @Scripts.Render("~/bundles/staff")
}