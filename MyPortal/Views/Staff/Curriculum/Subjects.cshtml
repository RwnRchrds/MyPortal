@model MyPortal.ViewModels.SubjectsViewModel
@{
    ViewBag.Title = "Subjects";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}

<body>
<div class="container">
    <h2 class="mp-page-title">Subjects</h2>
    <hr/>
</div>

<div class="container">
    @if (User.IsInRole("SeniorStaff"))
    {
        <button type="button" class="btn btn-primary mp-btn-top-auto" data-toggle="modal" data-target="#NewSubjectModal">New Subject</button>
        <hr/>
    }

</div>

<div class="container">
   @Html.EJS().Grid("Subject").DataSource(d =>
   {
       d.Url("/api/curriculum/subjects/get/dataGrid/all").CrossDomain(false).Adaptor("UrlAdaptor");
   }).Columns(c =>
   {
       c.Field("Name").HeaderText("Name").Template("#subjectsNameTemplate").Width("150").Add();
       c.Field("Code").HeaderText("Code").Template("#subjectsCodeTemplate").Width("100").Add();
       c.Field("LeaderName").HeaderText("Leader").Template("#subjectsLeaderTemplate").Width("150").Add();
       c.HeaderText("Actions").Template("#subjectsActionsTemplate").Width("170").Add();
   }).AllowPaging().PageSettings(p => p.PageSize(12)).SearchSettings(s => { s.Operator("contains").IgnoreCase(true);}).Toolbar(new List<string> {"Search"}).Render()
</div>

<div id="NewSubjectModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">New Subject</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions {Url = "/api/subjects/new", HttpMethod = "POST", OnSuccess = "newSubjectSuccess", OnFailure = "newSubjectFailure"}, new {id = "newResultSetForm"}))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Subject Code")
                        @Html.TextBoxFor(x => x.Subject.Code, new {@class = "form-control", Name = "Code"})
                        @Html.ValidationMessageFor(x => x.Subject.Code)
                    </div>
                    <div class="form-group">
                        @Html.Label("Name")
                        @Html.TextBoxFor(x => x.Subject.Name, new {@class = "form-control", Name = "Name"})
                        @Html.ValidationMessageFor(x => x.Subject.Name)
                    </div>
                    <div class="form-group">
                        @Html.Label("Subject Leader")
                        @Html.DropDownListFor(l => l.Subject.LeaderId, new SelectList(from x in Model.Staff select new {x.Id, FullName = x.Person.LastName + ", " + x.Person.FirstName}, "Id", "FullName"), "Select Subject Leader", new {@class = "form-control", Name = "LeaderId"})
                        @Html.ValidationMessageFor(l => l.Subject.LeaderId)
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="EditSubjectModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit Subject</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions {Url = "/api/subjects/update", HttpMethod = "POST", OnSuccess = "editSubjectSuccess", OnFailure = "editSubjectFailure"}, new {id = "editResultSetForm"}))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Subject Code")
                        @Html.TextBoxFor(x => x.Subject.Code, new {@class = "form-control", Name = "Code", id = "EditSubjectCodeControl"})
                        @Html.ValidationMessageFor(x => x.Subject.Code)
                    </div>
                    <div class="form-group">
                        @Html.Label("Name")
                        @Html.TextBoxFor(x => x.Subject.Name, new {@class = "form-control", Name = "Name", id = "EditSubjectNameControl"})
                        @Html.ValidationMessageFor(x => x.Subject.Name)
                    </div>
                    <div class="form-group">
                        @Html.Label("Subject Leader")
                        @Html.DropDownListFor(l => l.Subject.LeaderId, new SelectList(from x in Model.Staff select new {x.Id, FullName = x.Person.LastName + ", " + x.Person.FirstName}, "Id", "FullName"), "Select Subject Leader", new {@class = "form-control", Name = "LeaderId", id = "EditSubjectStaffControl"})
                        @Html.ValidationMessageFor(l => l.Subject.LeaderId)
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(x => x.Subject.Id, new {Name = "Id", id = "EditSubjectIdControl"})
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
</body>

@section scripts
{
    <script>
        $(document).ready(function() {
            
            $("#Subjects").on("click",
                ".js-edit",
                function() {
                    var button = $(this);
                    var subjectId = button.attr("data-subject-id");
                    $.ajax({
                        url: "/api/curriculum/subjects/get/byId/" + subjectId,
                        method: "GET",
                        success: function(result) {
                            $("#EditSubjectCodeControl").val(result["code"]);
                            $("#EditSubjectNameControl").val(result["name"]);
                            $("#EditSubjectStaffControl").val(result["leaderId"]);
                            $("#EditSubjectIdControl").val(result["id"]);
                        },
                        error: function() {
                            toastr.error("Failed to load subject data");
                        }
                    });
                    $("#EditSubjectModal").modal('toggle');
                });

            $("#Subjects").on("click",
                ".js-delete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to delete this subject?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/curriculum/subjects/delete/" + button.attr("data-subject-id"),
                                    method: "DELETE",
                                    success: function(a) {
                                        $("#subjects").DataTable().ajax.reload();
                                        toastr.success(a);
                                    },
                                    error: function(e) {
                                        toastr.error(e.responseJSON);
                                    }
                                });
                            }
                        });
                });
            
        });

        function newSubjectSuccess(result) {
            $("#NewSubjectModal").modal('hide');
            refreshTable("Subjects");
            toastr.success(result);
        }

        function newSubjectFailure(result) {
            $("#NewSubjectModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function editSubjectSuccess(result) {
            $("#EditSubjectModal").modal('hide');
            refreshTable("Subjects");
            toastr.success(result);
        }

        function editSubjectFailure(result) {
            $("#EditSubjectModal").modal('hide');
            toastr.error(result.responseJSON);
        }
    </script>

    <script type="text/x-jsrender" id="subjectsNameTemplate">
        <div>
            ${Name}
        </div>
    </script>

    <script type="text/x-jsrender" id="subjectsLeaderTemplate">
            <div>
                ${LeaderName}
            </div>
        </script>

    <script type="text/x-jsrender" id="subjectsCodeTemplate">
            <div>
                ${Code}
            </div>
        </script>

    <script type="text/x-jsrender" id="subjectsActionsTemplate">
            <div>
                <button type='button' class='btn btn-xs btn-warning mp-btn-action js-edit' data-subject-id="${Id}">
                    <i class="far fa-edit"></i>
                </button>
                
                <button type='button' class='btn btn-xs btn-danger mp-btn-action js-delete' data-subject-id="${Id}">
                    <i class="far fa-trash-alt"></i>
                </button>
            </div>
        </script>

    @Scripts.Render("~/bundles/jqueryval")
}