@model MyPortal.ViewModels.StudyTopicsViewModel

@{
    ViewBag.Title = "Study Topics";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}

<div class="container">
    <h2 class="mp-page-title">Study Topics</h2>
    <hr/>
</div>

<div class="container">
    <button type="button" class="btn btn-primary mp-btn-top-auto" data-toggle="modal" data-target="#NewStudyTopicModal">New Study Topic</button>
    <hr/>
</div>

<div class="container">
    @Html.EJS().Grid("StudyTopics").DataSource(d => { d.Url("/api/curriculum/StudyTopics/get/dataGrid/all").CrossDomain(false).Adaptor("UrlAdaptor"); }).Columns(c =>
    {
        c.Field("Name").HeaderText("Name").Template("#StudyTopicsNameTemplate").Width("200").Add();
        c.Field("SubjectName").HeaderText("Subject").Template("#StudyTopicsSubjectTemplate").Width("150").Add();
        c.Field("YearGroup").HeaderText("Year Group").Template("#StudyTopicsYearGroupTemplate").Width("150").Add();
        c.HeaderText("Actions").Template("#StudyTopicsActionsTemplate").Width("170").Add();
    }).AllowPaging().PageSettings(p => p.PageSize(12)).SearchSettings(s => { s.Operator("contains").IgnoreCase(true); }).Toolbar(new List<string> {"Search"}).Render()
</div>

<div id="NewStudyTopicModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">New Study Topic</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions {Url = "/api/StudyTopics/create", HttpMethod = "POST", OnSuccess = "newStudyTopicsuccess", OnFailure = "newStudyTopicFailure"}, new {id = "newStudyTopicForm"}))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Name")
                        @Html.TextBoxFor(x => x.StudyTopic.Name, new {@class = "form-control", Name = "Name"})
                        @Html.ValidationMessageFor(x => x.StudyTopic.Name)
                    </div>
                    <div class="form-group">
                        @Html.Label("Subject")
                        @Html.DropDownListFor(x => x.StudyTopic.SubjectId, new SelectList(Model.Subjects, "Id", "Name"), "Select Subject", new {@class = "form-control", Name = "SubjectId"})
                        @Html.ValidationMessageFor(x => x.StudyTopic.SubjectId)
                    </div>
                    <div class="form-group">
                        @Html.Label("Year Group")
                        @Html.DropDownListFor(x => x.StudyTopic.YearGroupId, new SelectList(Model.YearGroups, "Id", "Name"), "Select Year Group", new {@class = "form-control", Name = "YearGroupId"})
                        @Html.ValidationMessageFor(x => x.StudyTopic.YearGroupId)
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="EditStudyTopicModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">New Study Topic</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions {Url = "/api/StudyTopics/update", HttpMethod = "POST", OnSuccess = "editStudyTopicsuccess", OnFailure = "editStudyTopicFailure"}, new {id = "editStudyTopicForm"}))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Name")
                        @Html.TextBoxFor(x => x.StudyTopic.Name, new {@class = "form-control", Name = "Name", id = "editStudyTopicNameControl"})
                        @Html.ValidationMessageFor(x => x.StudyTopic.Name)
                    </div>
                    <div class="form-group">
                        @Html.Label("Subject")
                        @Html.DropDownListFor(x => x.StudyTopic.SubjectId, new SelectList(Model.Subjects, "Id", "Name"), "Select Subject", new {@class = "form-control", Name = "SubjectId", id = "editStudyTopicsubjectControl"})
                        @Html.ValidationMessageFor(x => x.StudyTopic.SubjectId)
                    </div>
                    <div class="form-group">
                        @Html.Label("Year Group")
                        @Html.DropDownListFor(x => x.StudyTopic.YearGroupId, new SelectList(Model.YearGroups, "Id", "Name"), "Select Year Group", new {@class = "form-control", Name = "YearGroupId", id = "editStudyTopicYearGroupControl"})
                        @Html.ValidationMessageFor(x => x.StudyTopic.YearGroupId)
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(x => x.StudyTopic.Id, new {Name = "Id", id = "editStudyTopicIdControl"})
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function() {
            $('.modal').on('hidden.bs.modal',
                function() {
                    $(this).find('form').trigger('reset');
                });

            $("#StudyTopics").on("click",
                ".js-edit",
                function() {
                    const button = $(this);
                    const topicId = button.attr("data-topic-id");
                    $.ajax({
                        url: `/api/curriculum/studyTopics/get/byId/${topicId}`,
                        method: "GET",
                        success: function(result) {
                            $("#editStudyTopicNameControl").val(result["name"]);
                            $("#editStudyTopicsubjectControl").val(result["subjectId"]);
                            $("#editStudyTopicYearGroupControl").val(result["yearGroupId"]);
                            $("#editStudyTopicIdControl").val(result["id"]);
                        },
                        error: function() {
                            toastr.error("Failed to load study topic data");
                        }
                    });
                    $("#EditStudyTopicModal").modal('toggle');
                });

            $("#StudyTopics").on("click",
                ".js-delete",
                function() {
                    $.ajax({
                        url: `/api/curriculum/studyTopics/hasLessonPlans/${button.attr("data-topic-id")}`,
                        method: "GET",
                        success: function(a) {
                            if (!a) {
                                bootbox.confirm("Are you sure you wish to delete this study topic?",
                                    function(result) {
                                        if (result) {
                                            $.ajax({
                                                url: `/api/curriculum/StudyTopics/delete/${button.attr("data-topic-id")
                                                    }`,
                                                method: "DELETE",
                                                success: function(a) {
                                                    refreshTable("StudyTopics");
                                                    toastr.success(a);
                                                },
                                                error: function(e) {
                                                    toastr.error(e.responseJSON);
                                                }
                                            });
                                        }
                                    });
                            }

                            if (a) {
                                bootbox.confirm(
                                    "This study topic has lesson plans. Are you sure you wish to delete it?",
                                    function(result) {
                                        if (result) {
                                            $.ajax({
                                                url: `/api/curriculum/StudyTopics/delete/${button.attr("data-topic-id")
                                                    }`,
                                                method: "DELETE",
                                                success: function(a) {
                                                    refreshTable("StudyTopics");
                                                    toastr.success(a);
                                                },
                                                error: function(e) {
                                                    toastr.error(e.responseJSON);
                                                }
                                            });
                                        }
                                    });
                            }
                        },
                        error: function(e) {
                            toastr.error(e.responseJSON);
                        }
                    });
                });
        });

        function newStudyTopicsuccess(result) {
            $("#NewStudyTopicModal").modal('hide');
            refreshTable("StudyTopics");
            toastr.success(result);
        }

        function newStudyTopicFailure(result) {
            $("#NewStudyTopicModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function editStudyTopicsuccess(result) {
            $("#EditStudyTopicModal").modal('hide');
            refreshTable("StudyTopics");
            toastr.success(result);
        }

        function editStudyTopicFailure(result) {
            $("#EditStudyTopicModal").modal('hide');
            toastr.error(result.responseJSON);
        }
    </script>

    <script type="text/x-jsrender" id="studyTopicsNameTemplate">
        <div>
            ${Name}
        </div>
    </script>

    <script type="text/x-jsrender" id="studyTopicsSubjectTemplate">
            <div>
                ${SubjectName}
            </div>
        </script>

    <script type="text/x-jsrender" id="studyTopicsYearGroupTemplate">
                <div>
                    ${YearGroup}
                </div>
            </script>

    <script type="text/x-jsrender" id="studyTopicsActionsTemplate">
                <div>
                    <button type='button' class='btn btn-xs btn-warning mp-btn-action js-edit' data-topic-id="${Id}">
                        <i class="far fa-edit"></i>
                    </button>
                    
                    <button type='button' class='btn btn-xs btn-danger mp-btn-action js-delete' data-topic-id="${Id}">
                        <i class="far fa-trash-alt"></i>
                    </button>
                </div>
            </script>
}