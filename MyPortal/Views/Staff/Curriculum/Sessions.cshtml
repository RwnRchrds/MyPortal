@model MyPortal.ViewModels.SessionsViewModel
@{
    ViewBag.Title = "Sessions";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}

<div class="container">
    <h2 class="mp-page-title">Sessions for @Model.Class.Name</h2>
    <hr/>
</div>

<div class="container">
    @if (User.IsInRole("SeniorStaff"))
    {
        <button type="button" class="btn btn-primary mp-btn-top-auto" data-toggle="modal" data-target="#newSessionModal">Add Period</button>
        <button type="button" class="btn btn-primary mp-btn-top-auto" id="addRegPeriods">Add Reg Periods</button>
        <hr />
    }
</div>

<div class="container">
    @Html.EJS().Grid("Sessions").DataSource(d =>
    {
        d.Url($"/api/curriculum/sessions/get/byClass/dataGrid/{Model.Class.Id}").CrossDomain(false).Adaptor("UrlAdaptor");
    }).Columns(c =>
    {
        c.Field("PeriodName").HeaderText("Period").Template("#sessionsPeriodTemplate").Width("150").Add();
        c.HeaderText("Actions").Template("#sessionsActionsTemplate").Width("170").Add();
    }).AllowPaging().PageSettings(p => p.PageSize(12)).SearchSettings(s => { s.Operator("contains").IgnoreCase(true);}).Toolbar(new List<string> {"Search"}).Render()
</div>

<button type="button" class="btn btn-primary" id="backButton">Back</button>

<div id="newSessionModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Period for Class</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = "/api/curriculum/sessions/create", HttpMethod = "POST", OnSuccess = "newSessionSuccess", OnFailure = "newSessionFailure" }, new { id = "newSessionForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Period")
                        @Html.DropDownListFor(l => l.Session.PeriodId, new SelectList(Model.Periods, "Id", "Name"), "Select Period", new { @class = "form-control", Name = "PeriodId" })
                        @Html.ValidationMessageFor(l => l.Class.SubjectId)
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(x => x.Class.Id, new {Name = "ClassId"})
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="editSessionModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit Session</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = "/api/curriculum/sessions/update", HttpMethod = "POST", OnSuccess = "editSessionSuccess", OnFailure = "editSessionFailure" }, new { id = "editSessionForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.Label("Period")
                        @Html.DropDownListFor(l => l.Session.PeriodId, new SelectList(Model.Periods, "Id", "Name"), "Select Period", new { @class = "form-control", Name = "PeriodId", id = "editPeriodControl" })
                        @Html.ValidationMessageFor(l => l.Class.SubjectId)
                    </div>
                    <div class="form-group">
                        @Html.HiddenFor(x => x.Class.Id, new { Name = "ClassId", id = "editClassControl" })
                        @Html.HiddenFor(x => x.Session.Id, new {Name = "Id", id = "editIdControl"})
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts
{
    <script>
        $(document).ready(function() {
            $('.modal').on('hidden.bs.modal',
                function() {
                    $(this).find('form').trigger('reset');
                });

            $("#backButton").on("click",
                function () {
                    location.replace("@Url.Action("Classes", "Staff")");
                });           

            $("#Sessions").on("click",
                ".js-edit",
                function() {
                    var button = $(this);
                    var SessionId = button.attr("data-session-id");
                    $.ajax({
                        url: "/api/curriculum/sessions/get/byId/" + SessionId,
                        method: "GET",
                        success: function(result) {
                            $("#editPeriodControl").val(result["periodId"]);
                            $("#editClassControl").val(result["classId"]);
                            $("#editIdControl").val(result["id"]);
                        },
                        error: function() {
                            toastr.error("Failed to load Session data");
                        }
                    });
                    $("#editSessionModal").modal('toggle');
                });

            $("#Sessions").on("click",
                ".js-delete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to delete this Session?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/curriculum/sessions/delete/" +
                                        button.attr("data-session-id"),
                                    method: "DELETE",
                                    success: function(a) {
                                        refreshTable("Sessions");
                                        toastr.success(a);
                                    },
                                    error: function(e) {
                                        toastr.error(e.responseJSON);
                                    }
                                });
                            }
                        });
                });

            $("#addRegPeriods").on("click",
                function () {
                    bootbox.confirm("Are you sure you wish to assign all reg periods?",
                        function (result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/curriculum/sessions/addRegPeriods",
                                    data: {classId: @Model.Class.Id, periodId: 0},
                                    method: "POST",
                                    success: function (a) {
                                        refreshTable("Sessions");
                                        toastr.success(a);
                                    },
                                    error: function (e) {
                                        toastr.error(e.responseJSON);
                                    }
                                });
                            }
                        });
                });
        });

        function newSessionSuccess(result) {
            $("#newSessionModal").modal('hide');
            refreshTable("Sessions");
            toastr.success(result);
        }

        function newSessionFailure(result) {
            $("#newClassModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function editSessionSuccess(result) {
            $("#editClassModal").modal('hide');
            refreshTable("Sessions");
            toastr.success(result);
        }

        function editSessionFailure(result) {
            $("#editClassModal").modal('hide');
            toastr.error(result.responseJSON);
        }
    </script>

    <script type="text/x-jsrender" id="sessionsPeriodTemplate">
        <div>
            ${PeriodName}
        </div>
    </script>

    <script type="text/x-jsrender" id="sessionsActionsTemplate">
            <div>
                    <button type='button' class='btn btn-xs btn-warning mp-btn-action js-edit' data-assignment-id="${Id}">
                        <i class="far fa-edit"></i>
                    </button>
                        
                    <button type='button' class='btn btn-xs btn-danger mp-btn-action js-delete' data-assignment-id="${Id}">
                        <i class="far fa-trash-alt"></i>
                    </button>
            </div>
        </script>
}