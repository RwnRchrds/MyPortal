@model MyPortal.ViewModels.NewProductViewModel
@{
    ViewBag.Title = "Products";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}
<body>

    <div class="container">
        <h2 class="mp-page-title">Products</h2>
        <hr />
    </div>

    <div class="container">
        @if (User.IsInRole("Finance"))
        {
            <button type="button" class="btn btn-primary mp-btn-top-auto" data-toggle="modal" data-target="#NewProductModal">New Product</button>
            <hr />
        }
    </div>

    <div class="container">
        @Html.EJS().Grid("Products").DataSource(d =>
        {
            d.Url("/api/finance/products/get/dataGrid/all").CrossDomain(false).Adaptor("UrlAdaptor");
        }).Columns(c =>
        {
            c.Field("Description").HeaderText("Description").Template("#productsDescriptionTemplate").Width("300").Add();
            c.Field("TypeDescription").HeaderText("Type").Template("#productsTypeTemplate").Width("200").Add();
            c.Field("Price").HeaderText("Price").Template("#productsPriceTemplate").Width("150").Add();
            c.Field("Visible").HeaderText("On Store").Template("#productsStoreTemplate").Width("100").Add();
            c.Field("OnceOnly").HeaderText("One Time").Template("#productsOnceOnlyTemplate").Width("100").Add();
            c.HeaderText("Actions").Template("#productsActionsTemplate").Width(170).Add();
        }).AllowPaging().PageSettings(p => p.PageSize(12)).SearchSettings(s => { s.Operator("contains").IgnoreCase(true); }).Toolbar(new List<string>() { "Search" }).Render()
    </div>

    <div id="NewProductModal" class="modal fade" role="dialog">
        <div class="modal-dialog">


            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">New Product</h4>
                    <button type="button" class="close" data-dismiss="modal">
                        <span aria-hidden="false"></span>&times;
                    </button>
                </div>
                @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = "/api/finance/products/create", HttpMethod = "POST", OnSuccess = "newProductSuccess", OnFailure = "newProductFailure" }, new { id = "newProductForm" }))
                {
                    <div class="modal-body">
                        <div class="form-group">
                            @Html.Label("Description")
                            @Html.TextBoxFor(x => x.Product.Description, new { @class = "form-control", Name = "Description" })
                            @Html.ValidationMessageFor(x => x.Product.Description)
                        </div>
                        <div class="form-group">
                            @Html.Label("Type")
                            @Html.DropDownListFor(l => l.Product.ProductTypeId, new SelectList(Model.ProductTypes, "Id", "Description"), "Select Type", new { @class = "form-control", Name = "ProductTypeId" })
                            @Html.ValidationMessageFor(x => x.Product.ProductTypeId)
                        </div>
                        <div class="form-group">
                            @Html.Label("Price")
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text mp-bold" id="basic-addon">£</span>
                                </div>
                                @Html.TextBoxFor(x => x.Product.Price, new { @class = "form-control", Name = "Price" })
                            </div>
                            @Html.ValidationMessageFor(x => x.Product.Price)
                        </div>
                        <div class="checkbox">
                            <label style="font-weight: bold;">
                                @Html.CheckBoxFor(x => x.Product.Visible, new { Name = "Visible" }) Available on Store
                            </label>
                        </div>
                        <div class="checkbox">
                            <label style="font-weight: bold;">
                                @Html.CheckBoxFor(x => x.Product.OnceOnly, new { Name = "OnceOnly" }) One-Time Purchase
                            </label>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>

    <div id="EditProductModal" class="modal fade" role="dialog">
        <div class="modal-dialog">


            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Edit Product</h4>
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
                </div>
                @using (Ajax.BeginForm(null, null, new AjaxOptions { Url = "/api/finance/products/update", HttpMethod = "POST", OnSuccess = "editProductSuccess", OnFailure = "editProductFailure" }, new { id = "editProductForm" }))
                {
                    <div class="modal-body">
                        <div class="form-group">
                            @Html.HiddenFor(x => x.Product.Id, new { Name = "Id", id = "editIdControl" })
                            @Html.Label("Description")
                            @Html.TextBoxFor(x => x.Product.Description, new { @class = "form-control", Name = "Description", id = "editDescriptionControl" })
                            @Html.ValidationMessageFor(x => x.Product.Description)
                        </div>
                        <div class="form-group">
                            @Html.Label("Type")
                            @Html.DropDownListFor(l => l.Product.ProductTypeId, new SelectList(Model.ProductTypes, "Id", "Description"), "Select Type", new { @class = "form-control", Name = "ProductTypeId", id = "editTypeControl" })
                            @Html.ValidationMessageFor(x => x.Product.ProductTypeId)
                        </div>
                        <div class="form-group">
                            @Html.Label("Price")
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text mp-bold" id="basic-addon">£</span>
                                </div>
                                @Html.TextBoxFor(x => x.Product.Price, new { @class = "form-control", Name = "Price", id = "editPriceControl" })
                            </div>
                            @Html.ValidationMessageFor(x => x.Product.Price)
                        </div>
                        <div class="checkbox">
                            <label style="font-weight: bold;">
                                @Html.CheckBoxFor(x => x.Product.Visible, new { Name = "Visible", id = "editVisibleControl" }) Available on Store
                            </label>
                        </div>
                        <div class="checkbox">
                            <label style="font-weight: bold;">
                                @Html.CheckBoxFor(x => x.Product.OnceOnly, new { Name = "OnceOnly", id = "editOnceOnlyControl" }) One-Time Purchase
                            </label>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</body>


@section scripts
{
    <script>
        $(document).ready(function() {
            //Delete Product When Button Clicked
            $("#Products").on("click",
                ".js-delete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to delete this product?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/finance/products/delete/" + button.attr("data-product-id"),
                                    method: "DELETE",
                                    success: function(e) {
                                        refreshTable("Products");
                                        toastr.success(e);
                                    },
                                    error: function(e) {
                                        toastr.error(e.responseJSON);
                                    }
                                });
                            }
                        });
                });

            $('.modal').on('hidden.bs.modal',
                function() {
                    $(this).find('form').trigger('reset');
                });
            //Open Form When Edit Product Button Clicked
            $("#Products").on("click",
                ".js-edit",
                function() {
                    var button = $(this);
                    var logId = button.attr("data-product-id");
                    $.ajax({
                        url: "/api/finance/products/get/byId/" + logId,
                        method: "GET",
                        success: function(result) {
                            $("#editIdControl").val(result["id"]);
                            $("#editDescriptionControl").val(result["description"]);
                            $("#editPriceControl").val(result["price"].toFixed(2));
                            $("#editVisibleControl").attr("checked", (result["visible"]));
                            $("#editOnceOnlyControl").attr("checked", (result["onceOnly"]));
                            $("#editTypeControl").val(result["productTypeId"]);
                        },
                        error: function(result) {
                            toastr.error(result.responseJSON);
                        }
                    });
                    $("#EditProductModal").modal('toggle');
                });
        });

        function newProductSuccess(result) {
            $("#NewProductModal").modal('hide');
            refreshTable("Products");
            toastr.success(result);
        }

        function newProductFailure(result) {
            $("#NewProductModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function editProductSuccess(result) {
            $("#EditProductModal").modal('hide');
            refreshTable("Products");
            toastr.success(result);
        }

        function editProductFailure(result) {
            $("#EditProductModal").modal('hide');
            toastr.error(result.responseJSON);
        }
    </script>

    <script type="text/x-jsrender" id="productsDescriptionTemplate">
        <div>
            ${Description}
        </div>
    </script>

    <script type="text/x-jsrender" id="productsTypeTemplate">
        <div>
            ${TypeDescription}
        </div>
    </script>

    <script type="text/x-jsrender" id="productsPriceTemplate">
        <div>
            ${formatCurrency(Price)}
        </div>
    </script>

    <script type="text/x-jsrender" id="productsStoreTemplate">
        <div>
            ${renderBool(Visible)}
        </div>
    </script>

    <script type="text/x-jsrender" id="productsOnceOnlyTemplate">
        <div>
            ${renderBool(OnceOnly)}
        </div>
    </script>

    <script type="text/x-jsrender" id="productsActionsTemplate">
        <div>
            <button type='button' class='btn btn-xs mp-btn-action btn-warning js-edit' data-product-id="${Id}">
                <i class="far fa-edit"></i>
            </button>

            <button type='button' class='btn btn-xs mp-btn-action btn-danger js-delete' data-product-id="${Id}">
                <i class="far fa-trash-alt"></i>
            </button>
        </div>
    </script>
}