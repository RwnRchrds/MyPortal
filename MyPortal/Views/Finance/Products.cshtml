@model MyPortal.ViewModels.NewProductViewModel
@{
    ViewBag.Title = "Products";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}
<body>
<!--#region Title-->
<div class="container float-left">
    <h2 class="mp-page-title">Products</h2>
    <hr/>
</div>
<!--#endregion-->
<!--#region Buttons at Top of Page-->
<div class="container float-left">
    @if (User.IsInRole("Finance"))
    {
        <button type="button" class="btn btn-success mp-btn-top-auto" data-toggle="modal" data-target="#NewProductModal">New Product</button>
        <hr/>
    }
</div>
<!--#endregion-->
<!--#region Products Table-->
<div class="container float-left">
    <table class="table table-bordered table-hover mp-table" id="products">
        <thead>
        <tr>
            <th>Description</th>
            <th>Price</th>
            <th>On Store</th>
            <th>One Time</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>
<!--#endregion-->
<!--#region New Product Modal-->
<div id="NewProductModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">New Product</h4>
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="false"></span>&times;
                </button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions {Url = "/api/products/new", HttpMethod = "POST", OnSuccess = "newProductSuccess", OnFailure = "newProductFailure"}, new {id = "newProductForm"}))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(x => x.Product.Description)
                        @Html.TextBoxFor(x => x.Product.Description, new {@class = "form-control", Name = "Description"})
                        @Html.ValidationMessageFor(x => x.Product.Description)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Product.Price)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text mp-bold" id="basic-addon">£</span>
                            </div>
                            @Html.TextBoxFor(x => x.Product.Price, new {@class = "form-control", Name = "Price"})
                        </div>
                        @Html.ValidationMessageFor(x => x.Product.Price)
                    </div>
                    <div class="checkbox">
                        <label style="font-weight: bold;">
                            @Html.CheckBoxFor(x => x.Product.Visible, new {Name = "Visible"}) Available on Store
                        </label>
                    </div>
                    <div class="checkbox">
                        <label style="font-weight: bold;">
                            @Html.CheckBoxFor(x => x.Product.OnceOnly, new {Name = "OnceOnly"}) One-Time Purchase
                        </label>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }

        </div>
    </div>
</div>
<!--#endregion-->
<!--#region Edit Product Modal-->
<div id="EditProductModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!--content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit Product</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true"></span>&times;</button>
            </div>
            @using (Ajax.BeginForm(null, null, new AjaxOptions {Url = "/api/products/edit", HttpMethod = "POST", OnSuccess = "editProductSuccess", OnFailure = "editProductFailure"}, new {id = "editProductForm"}))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.HiddenFor(x => x.Product.Id, new {Name = "Id", id = "editIdControl"})
                        @Html.LabelFor(x => x.Product.Description)
                        @Html.TextBoxFor(x => x.Product.Description, new {@class = "form-control", Name = "Description", id = "editDescriptionControl"})
                        @Html.ValidationMessageFor(x => x.Product.Description)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Product.Price)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text mp-bold" id="basic-addon">£</span>
                            </div>
                            @Html.TextBoxFor(x => x.Product.Price, new {@class = "form-control", Name = "Price", id = "editPriceControl"})
                        </div>
                        @Html.ValidationMessageFor(x => x.Product.Price)
                    </div>
                    <div class="checkbox">
                        <label style="font-weight: bold;">
                            @Html.CheckBoxFor(x => x.Product.Visible, new {Name = "Visible", id = "editVisibleControl"}) Available on Store
                        </label>
                    </div>
                    <div class="checkbox">
                        <label style="font-weight: bold;">
                            @Html.CheckBoxFor(x => x.Product.OnceOnly, new {Name = "OnceOnly", id = "editOnceOnlyControl"}) One-Time Purchase
                        </label>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            }

        </div>
    </div>
</div>
<!--#endregion-->
</body>


@section scripts
{
    <script>
        $(document).ready(function() {

            function loadProducts() {

                var simpleCheckbox = function(data, type, full, meta) {
                    var isChecked = data === true ? "checked" : "";
                    return '<input type="checkbox" class="checkbox" onclick="return false;" ' +
                        isChecked +
                        ' />';
                };

                $("#products").DataTable({
                    ajax: {
                        url: "/api/products",
                        dataSrc: ""
                    },
                    columns: [
                        {
                            data: "description"
                        },
                        {
                            data: "price",
                            render: $.fn.dataTable.render.number(',', '.', 2, '£')
                        },
                        {
                            data: "visible",
                            render: simpleCheckbox
                        },
                        {
                            data: "onceOnly",
                            render: simpleCheckbox
                        },
                        {
                            data: "id",
                            render: function(data) {
                                return "<button type='button' class='btn btn-xs btn-warning js-edit' data-product-id=" +
                                    data +
                                    "><i class=\"far fa-edit\"></i></button> " +
                                    "<button type='button' class='btn btn-xs btn-danger js-delete' data-product-id=" +
                                    data +
                                    "><i class=\"far fa-trash-alt\"></i></button>";
                            }
                        }
                    ],
                    "language": {
                        "emptyTable": "No products to display"
                    }

                });
            }

            //Delete Product When Button Clicked
            $("#products").on("click",
                ".js-delete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to delete this product?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/products/" + button.attr("data-product-id"),
                                    method: "DELETE",
                                    success: function() {
                                        $("#products").DataTable().ajax.reload();
                                        toastr.success("Product deleted");
                                    },
                                    error: function() {
                                        toastr.error("Could not delete product");
                                    }
                                });
                            }
                        });
                });

            $('.modal').on('hidden.bs.modal',
                function() {
                    $(this).find('form').trigger('reset');
                });
            //Open Form When Edit Product Button Clicked
            $("#products").on("click",
                ".js-edit",
                function() {
                    var button = $(this);
                    var logId = button.attr("data-product-id");
                    $.ajax({
                        url: "/api/products/" + logId,
                        method: "GET",
                        success: function(result) {
                            $("#editIdControl").val(result["id"]);
                            $("#editDescriptionControl").val(result["description"]);
                            $("#editPriceControl").val(result["price"].toFixed(2));
                            $("#editVisibleControl").attr("checked", (result["visible"]));
                            $("#editOnceOnlyControl").attr("checked", (result["onceOnly"]));
                        },
                        error: function(result) {
                            toastr.error(result.responseJSON);
                        }
                    });
                    $("#EditProductModal").modal('toggle');
                });

            loadProducts();
        });

        function newProductSuccess(result) {
            $("#NewProductModal").modal('hide');
            $("#products").DataTable().ajax.reload();
            toastr.success(result);
        }

        function newProductFailure(result) {
            $("#NewProductModal").modal('hide');
            toastr.error(result.responseJSON);
        }

        function editProductSuccess(result) {
            $("#EditProductModal").modal('hide');
            $("#products").DataTable().ajax.reload();
            toastr.success(result);
        }

        function editProductFailure(result) {
            $("#EditProductModal").modal('hide');
            toastr.error(result.responseJSON);
        }
    </script>
}