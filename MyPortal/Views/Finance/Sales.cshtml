@model MyPortal.ViewModels.SalesViewModel
@{
    ViewBag.Title = "Sales";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}
<body>
    <!--#region Title-->
    <div class="container">
        <h2 class="mp-page-title">Sales</h2>
        <hr />
    </div>
    <!--#endregion-->
    <!--#region Buttons at Top-->
    <div class="container">
        <button type="button" class="btn btn-primary mp-btn-top-auto" id="newSaleButton">Sale Entry</button>
        <hr />
    </div>
    <!--#endregion-->
    <!--#region Sales Table + Selector-->
    <div class="container">
        @Html.Label("View Sales")
        @Html.DropDownList("SelectedStatus", new SelectList(Model.Status, "Pending"), new { @class = "form-control", Name = "SaleStatus", id = "selectedStatus" })
    </div>

    <div class="container mp-margin-top">
        @Html.EJS().Grid("Sales").DataSource(d =>
        {
            d.Url("/api/finance/sales/get/dataGrid/pending").CrossDomain(false).Adaptor("UrlAdaptor");
        }).Columns(c =>
        {
            c.Field("Date").HeaderText("Date").Template("#salesDateTemplate").Width("150").Add();
            c.Field("StudentName").HeaderText("Student").Template("#salesStudentTemplate").Width("150").Add();
            c.Field("ProductDescription").HeaderText("Product").Template("#salesProductTemplate").Width("300").Add();
            c.Field("AmountPaid").HeaderText("Paid").Template("#salesPaidTemplate").Width("100").Add();
            c.HeaderText("Status").Template("#salesStatusTemplate").Width("200").Add();
            c.HeaderText("Actions").Template("#salesActionsTemplate").Width("170").Add();
        }).AllowPaging().PageSettings(p => p.PageSize(12)).SearchSettings(s => { s.Operator("contains").IgnoreCase(true); }).Toolbar(new List<string>() { "Search" }).Render()
    </div>
    <!--#endregion-->
</body>

@section scripts
{
    <script>
        $(document).ready(function() {
            $("#selectedStatus").on("change",
                function() {
                    var status = $("#selectedStatus").val();
                    if (status === "All") {
                        changeTableSource("Sales", "/api/finance/sales/get/dataGrid/all");
                    } else if (status === "Pending") {
                        changeTableSource("Sales", "/api/finance/sales/get/dataGrid/pending");
                    } else if (status === "Processed") {
                        changeTableSource("Sales", "/api/finance/sales/get/dataGrid/processed");
                    }
                });

            $("#newSaleButton").on("click",
                function() {
                    location.replace("/Staff/Finance/Sales/New");
                });

            //Delete Sale When Button Clicked
            $("#Sales").on("click",
                ".js-delete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to delete this sale?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/finance/sales/delete/" + button.attr("data-sale-id"),
                                    method: "DELETE",
                                    success: function(e) {
                                        refreshTable("Sales");
                                        toastr.success(e);
                                    },
                                    error: function(e) {
                                        toastr.error(e.responseJSON);
                                    }
                                });
                            }
                        });
                });

            //Mark Sale Processed When Button Clicked
            $("#Sales").on("click",
                ".js-complete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to mark this sale as processed?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/finance/sales/markComplete/" + button.attr("data-sale-id"),
                                    method: "POST",
                                    success: function(a) {
                                        refreshTable("Sales");
                                        toastr.success(a);
                                    },
                                    error: function(e) {
                                        toastr.error(e.responseJSON);
                                    }
                                });
                            }
                        });
                });

            //Refund Sale When Button Clicked
            $("#Sales").on("click",
                ".js-refund",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to refund this sale?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: "/api/finance/sales/refund/" + button.attr("data-sale-id"),
                                    method: "POST",
                                    success: function(e) {
                                        refreshTable("Sales");
                                        toastr.success(e);
                                    },
                                    error: function(e) {
                                        toastr.error(e.responseJSON);
                                    }
                                });
                            }
                        });
                });
        });

        function renderSaleStatus(refunded, processed) {
            if (refunded) {
                return "Refunded";
            } else if (processed) {
                return "Processed";
            } else {
                return "Pending";
            }
        }

        function renderActions(refunded, processed, id) {
            var processedButton = "";
            var refundButton = "";

            if (!refunded && !processed) {
                refundButton =
                    `<button type='button' class='btn btn-xs btn-warning mp-btn-action js-refund' data-sale-id='${id}'>
                <i class="fas fa-reply"></i>
            </button>`;
            }

            if (!processed) {
                processedButton =
                    `<button type='button' class='btn btn-xs btn-success mp-btn-action js-complete' data-sale-id='${id}'>
                <i class='fas fa-check'></i>
            </button>`;
            }

            var deleteButton =
                `<button type='button' class='btn btn-xs btn-danger mp-btn-action js-delete' data-sale-id='${id}'>
                <i class='far fa-trash-alt'></i>
            </button>`;

            return processedButton + refundButton + deleteButton;
        }
    </script>

    <script type="text/x-jsrender" id="salesDateTemplate">
        <div>
            ${formatDate(Date.toString())}
        </div>
    </script>

    <script type="text/x-jsrender" id="salesStudentTemplate">
        <div>
            ${StudentName}
        </div>
    </script>

    <script type="text/x-jsrender" id="salesProductTemplate">
        <div>
            ${ProductDescription}
        </div>
    </script>

    <script type="text/x-jsrender" id="salesPaidTemplate">
        <div>
            ${formatCurrency(AmountPaid)}
        </div>
    </script>

    <script type="text/x-jsrender" id="salesStatusTemplate">
        <div>
            ${renderSaleStatus(Refunded, Processed)}
        </div>
    </script>

    <script type="text/x-jsrender" id="salesActionsTemplate">
        <div>                        
            ${renderActions(Refunded, Processed, Id)}
        </div>
    </script>
}