@model MyPortal.ViewModels.SalesViewModel
@{
    ViewBag.Title = "Sales";
    ViewBag.DisplayTitle = "Sales";
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Sales</h1>
</div>

<div class="row">
    
    <div class="col-xl-12 col-md-12 mb-4">
        <button type="button" class="btn btn-primary mp-btn-top-auto" id="newSaleButton">Sale Entry</button>
    </div>
    
</div>
    
    
<div class="row">
    
    <div class="col-xl-12 col-md-12 mb-4">
        @Html.Label("View Sales")
            @Html.DropDownList("SelectedStatus", new SelectList(Model.Status, "Pending"), new {@class = "form-control", Name = "SaleStatus", id = "selectedStatus"})
    </div>
    
</div>

<div class="row">
    
    <div class="col-xl-12 col-lg-12">
        
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Log Notes</h6>
            </div>
            <!-- Card Body -->
            <div class="card-body">
                
                <div class="mb-4">
                    
                    <button type="button" class="btn btn-success mb-4" data-toggle="modal" data-target="#NewLogModal">
                        <i class="fa fa-plus-circle"></i> New Log Note
                    </button>

                </div>

                @Html.EJS().Grid("Sales").DataSource(d =>
                {
                    d.Url(Url.HttpRouteUrl("ApiFinanceGetPendingSalesDataGrid", new {})).CrossDomain(false).Adaptor("UrlAdaptor");
                }).Columns(c =>
                {
                    c.Field("Date").HeaderText("Date").Template("#salesDateTemplate").Width("150").Add();
                    c.Field("StudentName").HeaderText("Student").Template("#salesStudentTemplate").Width("150").Add();
                    c.Field("ProductDescription").HeaderText("Product").Template("#salesProductTemplate").Width("300").Add();
                    c.Field("AmountPaid").HeaderText("Paid").Template("#salesPaidTemplate").Width("100").Add();
                    c.HeaderText("Status").Template("#salesStatusTemplate").Width("200").Add();
                    c.HeaderText("Actions").Template("#salesActionsTemplate").Width("170").Add();
                }).AllowPaging().PageSettings(p => p.PageSize(12)).SearchSettings(s => { s.Operator("contains").IgnoreCase(true); }).Toolbar(new List<string>() {"Search"}).Render()
            </div>
                    
        </div>
        
    </div>
    
</div>

@section scripts
{
    <script>

        var urlGetAllSales = "@Url.HttpRouteUrl("ApiFinanceGetAllSalesDataGrid", new {})";
        var urlGetPendingSales = "@Url.HttpRouteUrl("ApiFinanceGetPendingSalesDataGrid", new {})";
        var urlGetProcessedSales = "@Url.HttpRouteUrl("ApiFinanceGetProcessedSalesDataGrid", new {})";
        var urlDeleteSale = "@Url.HttpRouteUrl("ApiFinanceDeleteSale", new {saleId = 9999})";
        var urlMarkSaleComplete = "@Url.HttpRouteUrl("ApiFinanceMarkSaleProcessed", new {saleId = 9999})";
        var urlRefundSale = "@Url.HttpRouteUrl("ApiFinanceRefundSale", new {saleId = 9999})";

        $(document).ready(function() {
            $("#selectedStatus").on("change",
                function() {
                    var status = $("#selectedStatus").val();
                    if (status === "All") {
                        changeTableSource("Sales", urlGetAllSales);
                    } else if (status === "Pending") {
                        changeTableSource("Sales", urlGetPendingSales);
                    } else if (status === "Processed") {
                        changeTableSource("Sales", urlGetProcessedSales);
                    }
                });

            $("#newSaleButton").on("click",
                function() {
                    location.replace("@Url.Action("SaleEntry", "Finance")");
                });

            //Delete Sale When Button Clicked
            $("#Sales").on("click",
                ".js-delete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to delete this sale?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: urlDeleteSale.replace("9999", button.attr("data-sale-id")),
                                    method: "DELETE",
                                    success: function(e) {
                                        refreshTable("Sales");
                                        toastr.success(e);
                                    },
                                    error: function(e) {
                                        toastr.error(e.responseJSON);
                                    }
                                });
                            }
                        });
                });

            //Mark Sale Processed When Button Clicked
            $("#Sales").on("click",
                ".js-complete",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to mark this sale as processed?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: urlMarkSaleComplete.replace("9999", button.attr("data-sale-id")),
                                    method: "POST",
                                    success: function(a) {
                                        refreshTable("Sales");
                                        toastr.success(a);
                                    },
                                    error: function(e) {
                                        toastr.error(e.responseJSON);
                                    }
                                });
                            }
                        });
                });

            //Refund Sale When Button Clicked
            $("#Sales").on("click",
                ".js-refund",
                function() {
                    var button = $(this);
                    bootbox.confirm("Are you sure you wish to refund this sale?",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: urlRefundSale.replace("9999", button.attr("data-sale-id")),
                                    method: "POST",
                                    success: function(e) {
                                        refreshTable("Sales");
                                        toastr.success(e);
                                    },
                                    error: function(e) {
                                        toastr.error(e.responseJSON);
                                    }
                                });
                            }
                        });
                });
        });

        function renderSaleStatus(refunded, processed) {
            if (refunded) {
                return "Refunded";
            } else if (processed) {
                return "Processed";
            } else {
                return "Pending";
            }
        }

        function renderActions(refunded, processed, id) {
            var processedButton = "";
            var refundButton = "";

            if (!refunded && !processed) {
                refundButton =
                    `<button type='button' class='btn btn-xs btn-warning mp-btn-action js-refund' data-sale-id='${id}'>
                <i class="fas fa-reply"></i>
            </button>`;
            }

            if (!processed) {
                processedButton =
                    `<button type='button' class='btn btn-xs btn-success mp-btn-action js-complete' data-sale-id='${id}'>
                <i class='fas fa-check'></i>
            </button>`;
            }

            var deleteButton =
                `<button type='button' class='btn btn-xs btn-danger mp-btn-action js-delete' data-sale-id='${id}'>
                <i class='far fa-trash-alt'></i>
            </button>`;

            return processedButton + refundButton + deleteButton;
        }
    </script>

    <script type="text/x-jsrender" id="salesDateTemplate">
        <div>
            ${formatDate(Date.toString())}
        </div>
    </script>

    <script type="text/x-jsrender" id="salesStudentTemplate">
        <div>
            ${StudentName}
        </div>
    </script>

    <script type="text/x-jsrender" id="salesProductTemplate">
        <div>
            ${ProductDescription}
        </div>
    </script>

    <script type="text/x-jsrender" id="salesPaidTemplate">
        <div>
            ${formatCurrency(AmountPaid)}
        </div>
    </script>

    <script type="text/x-jsrender" id="salesStatusTemplate">
        <div>
            ${renderSaleStatus(Refunded, Processed)}
        </div>
    </script>

    <script type="text/x-jsrender" id="salesActionsTemplate">
        <div>                        
            ${renderActions(Refunded, Processed, Id)}
        </div>
    </script>
}