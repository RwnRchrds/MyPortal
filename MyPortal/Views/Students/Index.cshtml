@model MyPortal.ViewModels.StudentDetailsViewModel
@{
    ViewBag.Title = "Home: " + Model.Student.Person.LastName + ", " + Model.Student.Person.FirstName;
    Layout = "~/Views/Shared/_LayoutStudent.cshtml";
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>

<style>
    .overview-card {
        width: 550px;
    }
</style>

<div class="container float-left">
    <h2 class="mp-page-title">@Model.Student.Person.LastName, @Model.Student.Person.FirstName</h2>
    <hr/>
</div>

<body>

<!--CARD CONTAINER-->
<div class="container float-left" id="container-2">
    <!--Student Details Card-->
    <div class="float-left" id="detailsDiv">

        <div class="card border-primary mp-card" id="detailsCard">

            <div class="card-header bg-primary">MyDetails</div>

            <div class="card-body">

                <!--Student Details Table-->
                <table class="table-condensed mp-table-condensed">
                    <tr>
                        <td>
                            <b>First Name</b>
                        </td>
                        <td>@Model.Student.Person.FirstName</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Last Name</b>
                        </td>
                        <td>@Model.Student.Person.LastName</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Year Group</b>
                        </td>
                        <td>@Model.Student.PastoralYearGroup.Name</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Reg Group</b>
                        </td>
                        <td>@Model.Student.PastoralRegGroup.Name</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Reg Tutor</b>
                        </td>
                        <td>@Model.Student.PastoralRegGroup.Tutor.Person.Title @Model.Student.PastoralRegGroup.Tutor.Person.FirstName.Substring(0, 1) @Model.Student.PastoralRegGroup.Tutor.Person.LastName</td>
                    </tr>
                    <tr>
                        <td>
                            <b>Head of Year</b>
                        </td>
                        <td>@Model.Student.PastoralYearGroup.HeadOfYear.Person.Title @Model.Student.PastoralYearGroup.HeadOfYear.Person.FirstName.Substring(0, 1) @Model.Student.PastoralYearGroup.HeadOfYear.Person.LastName</td>
                    </tr>
                </table>

            </div>

            <!--Student Details Footer (Account Balance)-->
            <div class="card-footer bg-transparent border-primary">

                <h5><b>Balance:</b> £@Model.Student.AccountBalance</h5>

            </div>
        </div>
    </div>

    <!-- MyResults Table Card -->
    <div class="float-left" id="resultsTableDiv">
        <div class="card border-primary mp-card overview-card" id="summaryCard">
            <div class="card-header bg-primary">Overview</div>
            <div class="float-left container">
                <div class="mp-info-block inline-block" id="attendanceBlock">
                    @if (Model.HasAttendaceData && Model.Attendance != null)
                    {
                        <div class="mp-info-block-label">Attendance</div>
                        <div class="mp-info-block-detail" data-hasdata="true" id="attendanceDetail">
                            @Model.Attendance%
                        </div>
                    }
                    @if (!Model.HasAttendaceData || Model.Attendance == null)
                    {
                        <div class="mp-info-block-label">Attendance</div>
                        <div class="mp-info-block-detail-nodata" data-hasdata="false" id="attendanceDetail">
                            No Data
                        </div>
                    }
                </div>

                <div class="mp-info-block inline-block" id="achievementBlock">
                    <div class="mp-info-block-label">Achievements</div>
                    <div class="mp-info-block-detail" id="achievementDetail">
                        @Model.AchievementCount
                    </div>
                </div>

                <div class="mp-info-block inline-block" id="behaviourBlock">
                    <div class="mp-info-block-label">Behaviour</div>
                    <div class="mp-info-block-detail" id="behaviourDetail">
                        @Model.BehaviourCount
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- MyLogs Panel -->
<div class="container float-left mp-margin-top">
    <div>
        <hr/>
        <h4 class="mp-bold">MyLogs</h4>
        <table class="table table-sm table-bordered mp-table mp-log-table" id="logs" data-student-id="@Model.Student.Id">
            <thead>
            <tr>
                <th>Date</th>
                <th>Author</th>
                <th>Type</th>
                <th>Message</th>
            </tr>
            </thead>
        </table>
    </div>
</div>

<!-- MyDocuments Panel -->
<div class="container float-left mp-margin-top">
    <div>
        <hr/>
        <h4 class="mp-bold">MyDocuments</h4>
        <table class="table table-sm table-bordered mp-table mp-document-table mp-table-link" id="documents" data-student-id="@Model.Student.Id">
            <thead>
            <tr>
                <th>Description</th>
                <th>Date</th>
            </tr>
            </thead>
        </table>
    </div>
</div>
</body>

@section scripts
{
    <script>
        //Script run when page loads
        $(document).ready(function () {

            overviewCalc();

            $("#logs").DataTable({
                ajax: {
                    url: "/api/logs/" + $("#logs").attr("data-student-id"),
                    dataSrc: "",
                    method: "GET"
                },
                columns: [
                    {
                        data: "date",
                        render: function(data) {
                            var date = new Date(data);
                            return date.toLocaleDateString();
                        }

                    },
                    {
                        data: "author.code",
                        render: function(data, type, log) {
                            return log.author.person.title +
                                " " +
                                log.author.person.firstName.substring(0, 1) +
                                " " +
                                log.author.person.lastName;
                        }
                    },
                    {
                        data: "profileLogType.name"
                    },
                    {
                        data: "message",
                        render: function(data) {

                            if ("@Model.Student.Person.Gender" === "M") {
                                return data.replace(/<name>/g, "@Model.Student.Person.FirstName")
                                    .replace(/<he>/g, "he")
                                    .replace(/<He>/g, "He")
                                    .replace(/<him>/g, "him")
                                    .replace(/<Him>/g, "Him")
                                    .replace(/<his>/g, "his")
                                    .replace(/<His>/g, "His")
                                    .replace(/<himself>/g, "himself")
                                    .replace(/<Himself>/g, "Himself")
                                    .replace(/</g, "&lt;")
                                    .replace(/>/g, "&gt;")
                                    .replace(/\n/g, "<br/>");
                            }

                            if ("@Model.Student.Person.Gender" === "F") {
                                return data.replace("<name>", "@Model.Student.Person.FirstName")
                                    .replace(/<he>/g, "she")
                                    .replace(/<He>/g, "She")
                                    .replace(/<him>/g, "her")
                                    .replace(/<Him>/g, "Her")
                                    .replace(/<his>/g, "her")
                                    .replace(/<His>/g, "Her")
                                    .replace(/<himself>/g, "herself")
                                    .replace(/<Himself>/g, "Herself")
                                    .replace(/</g, "&lt;")
                                    .replace(/>/g, "&gt;")
                                    .replace(/\n/g, "<br/>");
                            }

                            if ("@Model.Student.Person.Gender" === "X") {
                                return data.replace("<name>", "@Model.Student.Person.FirstName")
                                    .replace(/<he>/g, "they")
                                    .replace(/<He>/g, "They")
                                    .replace(/<him>/g, "them")
                                    .replace(/<Him>/g, "Them")
                                    .replace(/<his>/g, "their")
                                    .replace(/<His>/g, "Their")
                                    .replace(/<himself>/g, "themselves")
                                    .replace(/<Himself>/g, "Themselves")
                                    .replace(/</g, "&lt;")
                                    .replace(/>/g, "&gt;")
                                    .replace(/\n/g, "<br/>");
                            }

                            return data;
                        }
                    }
                ],
                paging: false,
                ordering: false,
                searching: false,
                info: false,
                "createdRow": function(row, data, dataIndex) {
                    if (data.profileLogType.name === "Academic Support") {
                        $(row).addClass("mp-log-academic-support");
                    }

                    if (data.profileLogType.name === "Behaviour Log") {
                        $(row).addClass("mp-log-behaviour");
                    }

                    if (data.profileLogType.name === "Report") {
                        $(row).addClass("mp-log-report");
                    }

                    if (data.profileLogType.name === "Praise") {
                        $(row).addClass("mp-log-praise");
                    }

                    if (data.profileLogType.name === "SEN Note") {
                        $(row).addClass("mp-log-sen");
                    }

                    if (data.profileLogType.name === "Student Feed") {
                        $(row).addClass("mp-log-student-feed");
                    }

                    if (data.profileLogType.name === "Tutor Note") {
                        $(row).addClass("mp-log-tutor-note");
                    }

                    if (data.profileLogType.name === "Medical Event") {
                        $(row).addClass("mp-log-medical-event");
                    }
                },
                "language": {
                    "emptyTable": "No logs to display"
                }
            });

            $("#documents").DataTable({
                ajax: {
                    url: "/api/students/documents/fetch/" + $("#documents").attr("data-student-id"),
                    dataSrc: "",
                    method: "GET"
                },
                columns: [
                    {
                        data: "document.description",
                        render: function(data, type, document) {
                            return "<a href='" +
                                document.document.url +
                                "' target='_blank'>" +
                                document.document.description +
                                "</a>";
                        }

                    },
                    {
                        data: "document.date",
                        render: function(data) {
                            var date = new Date(data);
                            return date.toLocaleDateString();
                        }
                    }
                ],
                paging: false,
                ordering: false,
                searching: false,
                info: false,
                "language": {
                    "emptyTable": "No documents to display"
                }
            });
        });

        function overviewCalc() {

            //Attendance Block
            if ($("#attendanceDetail").attr("data-hasdata") === "true") {
                if (parseInt($("#attendanceDetail").text()) >= 95) {
                    $("#attendanceBlock").addClass("mp-background-success");
                }
                if (parseInt($("#attendanceDetail").text()) < 95) {
                    $("#attendanceBlock").addClass("mp-background-warning");
                }
                if (parseInt($("#attendanceDetail").text()) < 90) {
                    $("#attendanceBlock").removeClass("mp-background-warning");
                    $("#attendanceBlock").addClass("mp-background-danger");
                }
            }

            //Achievements Block
            if (parseInt($("#achievementDetail").text()) < @Model.BehaviourCount) {
                $("#achievementBlock").addClass("mp-background-danger");
            }
            if (parseInt($("#achievementDetail").text()) === @Model.BehaviourCount) {
                $("#achievementBlock").addClass("mp-background-warning");
            }
            if (parseInt($("#achievementDetail").text()) > @Model.BehaviourCount) {
                $("#achievementBlock").addClass("mp-background=success");
            }

            //Behaviour Block
            if (parseInt($("#behaviourDetail").text()) === 0) {
                $("#behaviourBlock").addClass("mp-background-success");
            }
            if (parseInt($("#behaviourDetail").text()) > 0) {
                $("#behaviourBlock").addClass("mp-background-warning");
            }
            if (parseInt($("#behaviourDetail").text()) > 10) {
                $("#behaviourBlock").addClass("mp-background-danger");
            }
        }
    </script>

    @Scripts.Render("~/bundles/students")
}